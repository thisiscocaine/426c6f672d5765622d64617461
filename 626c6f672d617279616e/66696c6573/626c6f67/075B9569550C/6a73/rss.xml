<?xml version="1.0" encoding="UTF-8"?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
      <title>Wolfgang&#x27;s Blog</title>
      <link>https://notthebe.ee/</link>
      <description></description>
      <generator>Zola</generator>
      <language>en</language>
      <atom:link href="https://notthebe.ee/rss.xml" rel="self" type="application/rss+xml"/>
      <lastBuildDate>Sat, 13 May 2023 00:00:00 +0000</lastBuildDate>
      <item>
          <title>Easy, quick and free valid SSL certificates for your homelab using DuckDNS and ACME DNS-01</title>
          <pubDate>Sat, 13 May 2023 00:00:00 +0000</pubDate>
          <author>Unknown</author>
          <link>https://notthebe.ee/blog/easy-ssl-in-homelab-dns01/</link>
          <guid>https://notthebe.ee/blog/easy-ssl-in-homelab-dns01/</guid>
          <description>&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;notthebe.ee&#x2F;blog&#x2F;easy-ssl-in-homelab-dns01&#x2F;images&#x2F;hero.png&quot; alt=&quot;Jellyfin with a Let&#x27;s Encrypt certificate&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;If you&#x27;re running local web applications in your homelab, chances are, you&#x27;re accessing them with a combination of an IP address and a port (e.g. &lt;code&gt;http:&#x2F;&#x2F;192.168.1.32:8096&lt;&#x2F;code&gt; for Jellyfin).&lt;&#x2F;p&gt;
&lt;p&gt;However, at some point, you might get tired of memorizing IP addresses, so you&#x27;ll switch to a combination of a reverse proxy and local domain names, such as &lt;code&gt;https:&#x2F;&#x2F;jellyfin.local&lt;&#x2F;code&gt; or &lt;code&gt;https:&#x2F;&#x2F;homeassistant.local&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;After doing that, you&#x27;ll quickly notice that you get a browser warning every time you visit your applications. Annoying.&lt;&#x2F;p&gt;
&lt;p&gt;So what are some possible solutions?&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;Create a local CA, generate your own certificates and trust them on every device that you browse the Internet on.&lt;&#x2F;li&gt;
&lt;li&gt;Add an exception for every application in your homelab on every device.&lt;&#x2F;li&gt;
&lt;li&gt;Just ignore it.&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;However, these solutions are half-measures at best, and a pain in the ass at worst. There&#x27;s an infinitely better way to serve your local web applications with pretty domain names and valid SSL certificates, and it involves an SSL certificate verification method called DNS-01&lt;&#x2F;p&gt;
&lt;h2 id=&quot;how-does-it-work&quot;&gt;How does it work?&lt;&#x2F;h2&gt;
&lt;p&gt;Here&#x27;s a very simplified explanation of how Let&#x27;s Encrypt handles certificate validation and generation.&lt;&#x2F;p&gt;
&lt;p&gt;In order to generate a Let&#x27;s Encrypt certificate, we would usually let &lt;code&gt;certbot&lt;&#x2F;code&gt; spin up a temporary web server on the machine that we&#x27;ll be generating the certificate for. Then, the Let&#x27;s Encrypt validation servers try to access a secret code stored on that temporary server, and if that works, we get our certificate. This method is called HTTP-01.&lt;&#x2F;p&gt;
&lt;p&gt;One of the big limitations of HTTP-01 is that the machine that the certificates are being generated for &lt;strong&gt;has to be publicly accessible&lt;&#x2F;strong&gt; for the validation servers to reach it. Moreover, the domain that we&#x27;re generating certificates for &lt;strong&gt;has to resolve to the IP address of the machine&lt;&#x2F;strong&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;DNS-01 helps us circumvent these limitations by using a special DNS record to verify domain ownership, instead of directly &amp;quot;talking&amp;quot; to the machine that we&#x27;re generating certificates for. And as an added bonus, DNS-01 lets us generate &lt;strong&gt;wildcard certificates&lt;&#x2F;strong&gt; for our domains. Which means that if we have multiple applications with subdomains like &lt;code&gt;jellyfin.homelab.xyz&lt;&#x2F;code&gt;, &lt;code&gt;homeasssistant.homelab.xyz&lt;&#x2F;code&gt;, &lt;code&gt;proxmox.homelab.xyz&lt;&#x2F;code&gt;, we won&#x27;t need to specify them one-by-one in our certificate request. Instead, we can generate a certificate for &lt;code&gt;*.homelab.xyz&lt;&#x2F;code&gt;, which will be valid for all subdomains on the same level. Neat!&lt;&#x2F;p&gt;
&lt;h2 id=&quot;what-will-i-need&quot;&gt;What will I need?&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;domain-name&quot;&gt;Domain name&lt;&#x2F;h3&gt;
&lt;p&gt;In my opinion, DuckDNS is the best free option for this method. It&#x27;s very easy to set up and doesn&#x27;t require registration (you can simply log in with your GitHub account). The only downside is that the resulting domain names will be pretty long, e.g. &lt;code&gt;jellyfin.homelab.duckdns.org&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;If this is a deal breaker for you, you can buy a shorter domain name on websites like Namecheap, GoDaddy or Google Domains. Just make sure that your domain registar &lt;a href=&quot;https:&#x2F;&#x2F;community.letsencrypt.org&#x2F;t&#x2F;dns-providers-who-easily-integrate-with-lets-encrypt-dns-validation&#x2F;86438&quot;&gt;supports Let&#x27;s Encypt DNS-01 validation&lt;&#x2F;a&gt;. Many domains are sold for as little as $0.90, but &lt;strong&gt;pay attention to renewal fees&lt;&#x2F;strong&gt;: those can be as high as $40-50.&lt;&#x2F;p&gt;
&lt;p&gt;In this example, we&#x27;ll be using DuckDNS.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;reverse-proxy&quot;&gt;Reverse proxy&lt;&#x2F;h3&gt;
&lt;p&gt;We will also need a reverse proxy application. I will be using &lt;strong&gt;Nginx Proxy Manager&lt;&#x2F;strong&gt;, because it&#x27;s easy to set up and supports Let&#x27;s Encrypt DNS validation.&lt;&#x2F;p&gt;
&lt;p&gt;However, Nginx Proxy Manager is not the only reverse proxy server that supports DNS-01, and there are many other good alternatives, such as Traefik, Caddy or Linuxserver.io&#x27;s SWAG.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;os&quot;&gt;OS&lt;&#x2F;h3&gt;
&lt;p&gt;Last but not least, I&#x27;ll be running Debian 11, but this tutorial should work on any deb-Based operating system (e.g. Ubuntu)&lt;&#x2F;p&gt;
&lt;h2 id=&quot;installing-docker&quot;&gt;Installing Docker&lt;&#x2F;h2&gt;
&lt;p&gt;Install dependencies:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; class=&quot;language-bash z-code&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;sudo&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; apt&lt;span class=&quot;z-variable z-parameter z-option z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-parameter z-shell&quot;&gt; -&lt;&#x2F;span&gt;y&lt;&#x2F;span&gt; install apt-transport-https ca-certificates curl gnupg2 software-properties-common&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Then, add the Docker repository key:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; class=&quot;language-bash z-code&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;curl&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt;&lt;span class=&quot;z-variable z-parameter z-option z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-parameter z-shell&quot;&gt; -&lt;&#x2F;span&gt;fsSL&lt;&#x2F;span&gt; https:&#x2F;&#x2F;download.docker.com&#x2F;linux&#x2F;debian&#x2F;gpg&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-logical z-pipe z-shell&quot;&gt;|&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;sudo&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; gpg&lt;span class=&quot;z-variable z-parameter z-option z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-parameter z-shell&quot;&gt; --&lt;&#x2F;span&gt;dearmor&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-parameter z-option z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-parameter z-shell&quot;&gt; -&lt;&#x2F;span&gt;o&lt;&#x2F;span&gt; &#x2F;usr&#x2F;share&#x2F;keyrings&#x2F;docker-archive-keyring.gpg&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Afterwards, add the Docker APT repository. Make sure to replace &lt;code&gt;amd64&lt;&#x2F;code&gt; with &lt;code&gt;arm64&lt;&#x2F;code&gt; if you&#x27;re running this on an ARM-based CPU.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; class=&quot;language-bash z-code&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-support z-function z-echo z-shell&quot;&gt;echo&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; &lt;span class=&quot;z-string z-quoted z-double z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-shell&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;deb [arch=amd64 signed-by=&#x2F;usr&#x2F;share&#x2F;keyrings&#x2F;docker-archive-keyring.gpg] https:&#x2F;&#x2F;download.docker.com&#x2F;linux&#x2F;debian &lt;span class=&quot;z-meta z-group z-expansion z-command z-parens z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-shell&quot;&gt;$&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-parens z-begin z-shell&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;lsb_release&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt;&lt;span class=&quot;z-variable z-parameter z-option z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-parameter z-shell&quot;&gt; -&lt;&#x2F;span&gt;cs&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-parens z-end z-shell&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; stable&lt;span class=&quot;z-punctuation z-definition z-string z-end z-shell&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-logical z-pipe z-shell&quot;&gt;|&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;sudo&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; tee &#x2F;etc&#x2F;apt&#x2F;sources.list.d&#x2F;docker.list&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Finally, install Docker and docker-compose with the following commands:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; class=&quot;language-bash z-code&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;sudo&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; apt update&lt;&#x2F;span&gt;
&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;sudo&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; apt-get install docker-ce docker-ce-cli containerd.io docker-compose&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;If you&#x27;re running as a non-root user, you might need to add your user to the &lt;code&gt;docker&lt;&#x2F;code&gt; group using the following command:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; class=&quot;language-bash z-code&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;sudo&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; usermod&lt;span class=&quot;z-variable z-parameter z-option z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-parameter z-shell&quot;&gt; -&lt;&#x2F;span&gt;aG&lt;&#x2F;span&gt; docker username&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Then, log out and then log back in again for the changes take effect.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;setting-up-the-reverse-proxy&quot;&gt;Setting up the reverse proxy&lt;&#x2F;h2&gt;
&lt;p&gt;I&#x27;ll be running Nginx Proxy Manager, as well as Jellyfin, Home Assistant and Nextcloud, using the following &lt;code&gt;docker-compose.yml&lt;&#x2F;code&gt; file:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;yaml&quot; class=&quot;language-yaml z-code&quot;&gt;&lt;code class=&quot;language-yaml&quot; data-lang=&quot;yaml&quot;&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-yaml&quot;&gt;version&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-quoted z-single z-yaml&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-yaml&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;2.2&lt;span class=&quot;z-punctuation z-definition z-string z-end z-yaml&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; 
&lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-yaml&quot;&gt;services&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt;
  &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-yaml&quot;&gt;nginxproxymanager&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt;
    &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-yaml&quot;&gt;image&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-quoted z-single z-yaml&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-yaml&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;jc21&#x2F;nginx-proxy-manager:latest&lt;span class=&quot;z-punctuation z-definition z-string z-end z-yaml&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; 
    &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-yaml&quot;&gt;container_name&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;nginxproxymanager&lt;&#x2F;span&gt;
    &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-yaml&quot;&gt;restart&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;unless-stopped&lt;&#x2F;span&gt; 
    &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-yaml&quot;&gt;ports&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt;
      &lt;span class=&quot;z-punctuation z-definition z-block z-sequence z-item z-yaml&quot;&gt;-&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-quoted z-single z-yaml&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-yaml&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;80:80&lt;span class=&quot;z-punctuation z-definition z-string z-end z-yaml&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
      &lt;span class=&quot;z-punctuation z-definition z-block z-sequence z-item z-yaml&quot;&gt;-&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-quoted z-single z-yaml&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-yaml&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;81:81&lt;span class=&quot;z-punctuation z-definition z-string z-end z-yaml&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
      &lt;span class=&quot;z-punctuation z-definition z-block z-sequence z-item z-yaml&quot;&gt;-&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-quoted z-single z-yaml&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-yaml&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;443:443&lt;span class=&quot;z-punctuation z-definition z-string z-end z-yaml&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; 
    &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-yaml&quot;&gt;volumes&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt;
      &lt;span class=&quot;z-punctuation z-definition z-block z-sequence z-item z-yaml&quot;&gt;-&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;.&#x2F;nginx&#x2F;data:&#x2F;data&lt;&#x2F;span&gt;
      &lt;span class=&quot;z-punctuation z-definition z-block z-sequence z-item z-yaml&quot;&gt;-&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;.&#x2F;nginx&#x2F;letsencrypt:&#x2F;etc&#x2F;letsencrypt&lt;&#x2F;span&gt; 

  &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-yaml&quot;&gt;nextcloud&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt;
    &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-yaml&quot;&gt;image&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;lscr.io&#x2F;linuxserver&#x2F;nextcloud:latest&lt;&#x2F;span&gt;
    &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-yaml&quot;&gt;container_name&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;nextcloud&lt;&#x2F;span&gt;
    &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-yaml&quot;&gt;environment&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt;
      &lt;span class=&quot;z-punctuation z-definition z-block z-sequence z-item z-yaml&quot;&gt;-&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;PUID=1000&lt;&#x2F;span&gt;
      &lt;span class=&quot;z-punctuation z-definition z-block z-sequence z-item z-yaml&quot;&gt;-&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;PGID=1000&lt;&#x2F;span&gt;
      &lt;span class=&quot;z-punctuation z-definition z-block z-sequence z-item z-yaml&quot;&gt;-&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;TZ=Europe&#x2F;Berlin&lt;&#x2F;span&gt; 
    &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-yaml&quot;&gt;volumes&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt;
      &lt;span class=&quot;z-punctuation z-definition z-block z-sequence z-item z-yaml&quot;&gt;-&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;.&#x2F;nextcloud&#x2F;appdata:&#x2F;config&lt;&#x2F;span&gt; 
      &lt;span class=&quot;z-punctuation z-definition z-block z-sequence z-item z-yaml&quot;&gt;-&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;.&#x2F;nextcloud&#x2F;data:&#x2F;data&lt;&#x2F;span&gt;
    &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-yaml&quot;&gt;restart&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;unless-stopped&lt;&#x2F;span&gt; 

  &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-yaml&quot;&gt;homeassistant&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt;
    &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-yaml&quot;&gt;image&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;lscr.io&#x2F;linuxserver&#x2F;homeassistant:latest&lt;&#x2F;span&gt;
    &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-yaml&quot;&gt;container_name&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;homeassistant&lt;&#x2F;span&gt; 
    &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-yaml&quot;&gt;environment&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt;
      &lt;span class=&quot;z-punctuation z-definition z-block z-sequence z-item z-yaml&quot;&gt;-&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;PUID=1000&lt;&#x2F;span&gt;
      &lt;span class=&quot;z-punctuation z-definition z-block z-sequence z-item z-yaml&quot;&gt;-&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;PGID=1000&lt;&#x2F;span&gt;
      &lt;span class=&quot;z-punctuation z-definition z-block z-sequence z-item z-yaml&quot;&gt;-&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;TZ=Europe&#x2F;Berlin&lt;&#x2F;span&gt; 
    &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-yaml&quot;&gt;volumes&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt;
      &lt;span class=&quot;z-punctuation z-definition z-block z-sequence z-item z-yaml&quot;&gt;-&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;.&#x2F;hass&#x2F;config:&#x2F;config&lt;&#x2F;span&gt; 
    &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-yaml&quot;&gt;restart&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;unless-stopped&lt;&#x2F;span&gt;

  &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-yaml&quot;&gt;jellyfin&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt;
    &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-yaml&quot;&gt;image&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;lscr.io&#x2F;linuxserver&#x2F;jellyfin:latest&lt;&#x2F;span&gt;
    &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-yaml&quot;&gt;container_name&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;jellyfin&lt;&#x2F;span&gt; 
    &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-yaml&quot;&gt;environment&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt;
      &lt;span class=&quot;z-punctuation z-definition z-block z-sequence z-item z-yaml&quot;&gt;-&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;PUID=1000&lt;&#x2F;span&gt;
      &lt;span class=&quot;z-punctuation z-definition z-block z-sequence z-item z-yaml&quot;&gt;-&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;PGID=1000&lt;&#x2F;span&gt;
      &lt;span class=&quot;z-punctuation z-definition z-block z-sequence z-item z-yaml&quot;&gt;-&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;TZ=Europe&#x2F;Berlin&lt;&#x2F;span&gt; 
    &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-yaml&quot;&gt;volumes&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt;
      &lt;span class=&quot;z-punctuation z-definition z-block z-sequence z-item z-yaml&quot;&gt;-&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;.&#x2F;jellyfin&#x2F;config:&#x2F;config&lt;&#x2F;span&gt;
      &lt;span class=&quot;z-punctuation z-definition z-block z-sequence z-item z-yaml&quot;&gt;-&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;.&#x2F;jellyfin&#x2F;tvshows:&#x2F;data&#x2F;tvshows&lt;&#x2F;span&gt;
      &lt;span class=&quot;z-punctuation z-definition z-block z-sequence z-item z-yaml&quot;&gt;-&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;.&#x2F;jellyfin&#x2F;movies:&#x2F;data&#x2F;movies&lt;&#x2F;span&gt; 
    &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-yaml&quot;&gt;restart&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;unless-stopped&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;You can also find an example docker-compose snippet on &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;NginxProxyManager&#x2F;nginx-proxy-manager&quot;&gt;Nginx Proxy Manager&#x27;s GitHub page&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;After creating the &lt;code&gt;docker-compose.yml&lt;&#x2F;code&gt; file, we can now launch our Compose stack by running &lt;code&gt;docker-compose up -d&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Wait until all the containers have been started, then navigate to &lt;code&gt;http:&#x2F;&#x2F;server-ip:81&lt;&#x2F;code&gt; in your browser&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;notthebe.ee&#x2F;blog&#x2F;easy-ssl-in-homelab-dns01&#x2F;images&#x2F;nginxproxymanager.png&quot; alt=&quot;Nginx Proxy Manager login screen&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;The default credentials are &lt;code&gt;admin@example.com&lt;&#x2F;code&gt; and &lt;code&gt;changeme&lt;&#x2F;code&gt;. You will be asked to change them after the first log in.&lt;&#x2F;p&gt;
&lt;p&gt;Before generating the certificate, we need to set up the domain name.&lt;&#x2F;p&gt;
&lt;p&gt;Go to &lt;a href=&quot;https:&#x2F;&#x2F;duckdns.org&quot;&gt;DuckDNS&lt;&#x2F;a&gt; and log in with your account.&lt;&#x2F;p&gt;
&lt;p&gt;Create a new domain and point it to the &lt;em&gt;local IP address&lt;&#x2F;em&gt; of your reverse proxy (e.g. 192.168.0.105):&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;notthebe.ee&#x2F;blog&#x2F;easy-ssl-in-homelab-dns01&#x2F;images&#x2F;duckdns_create.png&quot; alt=&quot;DuckDNS domain creation&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;If you&#x27;re using a different DNS provider, you will also need to create a separate CNAME record pointing to the domain root, in case you want to generate a wildcard certificate for the subdomains:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;notthebe.ee&#x2F;blog&#x2F;easy-ssl-in-homelab-dns01&#x2F;images&#x2F;cname.png&quot; alt=&quot;An example CNAME record for the subdomains using Cloudflare&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;In the Nginx Proxy Manager&#x27;s WebUI, go to SSL Certificates, and click &amp;quot;Add SSL Certificate&amp;quot;.&lt;&#x2F;p&gt;
&lt;p&gt;Here, input your main domain name (e.g. &lt;code&gt;homelab.duckdns.org&lt;&#x2F;code&gt;), as well as the wildcard record for all the subdomains (e.g. &lt;code&gt;*.homelab.duckdns.org&lt;&#x2F;code&gt;).&lt;&#x2F;p&gt;
&lt;p&gt;Click on &amp;quot;Use a DNS Challenge&amp;quot; and select &amp;quot;DuckDNS&amp;quot; from the list of providers.&lt;&#x2F;p&gt;
&lt;p&gt;Go back to DuckDNS and copy your &lt;strong&gt;API token&lt;&#x2F;strong&gt;. Paste the token into the &amp;quot;Credentials File Contents&amp;quot; textbox.&lt;&#x2F;p&gt;
&lt;p&gt;Additionally, you might want to set the &amp;quot;Propagation Seconds&amp;quot; parameter to 120 seconds. The default value is 30 sec., however, sometimes this is not enough for the DNS changes to propagate.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;notthebe.ee&#x2F;blog&#x2F;easy-ssl-in-homelab-dns01&#x2F;images&#x2F;cert_settings.png&quot; alt=&quot;Certificate settings&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Finally, agree to Let&#x27;s Encrypt Terms of Service and click on &amp;quot;Save&amp;quot;.&lt;&#x2F;p&gt;
&lt;p&gt;If you did everything correctly, you should now see your generated certificate:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;notthebe.ee&#x2F;blog&#x2F;easy-ssl-in-homelab-dns01&#x2F;images&#x2F;generated_cert.png&quot; alt=&quot;Generated Let&#x27;s Encrypt SSL certificate&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;adding-a-proxy-entry&quot;&gt;Adding a proxy entry&lt;&#x2F;h2&gt;
&lt;p&gt;Let&#x27;s add our first proxy entry for the Nginx Proxy Manager itself. This will let us access it by going to &lt;code&gt;htts:&#x2F;&#x2F;notthebee.duckdns.org&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;In the top menu bar, click on Hosts &amp;gt; Proxy Hosts, and then click on &amp;quot;Add a Proxy Host&amp;quot;. I will use the following parameters:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Domain Names&lt;&#x2F;strong&gt;: notthebee.duckdns.org&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Scheme&lt;&#x2F;strong&gt;: http&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Forward Hostname &#x2F; IP&lt;&#x2F;strong&gt;: nginxproxymanager (more on that below)&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Forward Port&lt;&#x2F;strong&gt; :81&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;notthebe.ee&#x2F;blog&#x2F;easy-ssl-in-homelab-dns01&#x2F;images&#x2F;domain_settings.png&quot; alt=&quot;Proxy entry settings&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;If all of your applications are on the same Docker network (e.g. if you&#x27;re using a single docker-compose.yml file), you can use their respective container names (&lt;code&gt;container_name&lt;&#x2F;code&gt; parameter) here instead of the IP (in this case, &lt;code&gt;nginxproxymanager&lt;&#x2F;code&gt;).&lt;&#x2F;p&gt;
&lt;p&gt;When it comes to other parameters, feel free to enable them if you know that the application that you&#x27;re proxying supports&#x2F;requires them.&lt;&#x2F;p&gt;
&lt;p&gt;Afterwards, go to the SSL tab and choose the certificate that we&#x27;ve generated in the previous step. Enable Force SSL and HTTP&#x2F;2 support.&lt;&#x2F;p&gt;
&lt;p&gt;And that&#x27;s it! Navigate to the domain in the browser and you should see a lock in the address bar, and no SSL warning.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;notthebe.ee&#x2F;blog&#x2F;easy-ssl-in-homelab-dns01&#x2F;images&#x2F;nginxproxymanager_with_ssl.png&quot; alt=&quot;Nginx Proxy Manager Log in Screen&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Repeat for every application that you&#x27;d like to access with your new domain :)&lt;&#x2F;p&gt;
&lt;h2 id=&quot;nginx-proxy-manager&quot;&gt;Nginx Proxy Manager&lt;&#x2F;h2&gt;
&lt;p&gt;Nginx Proxy Manager has a lot of other cool features that I didn&#x27;t mention in this post, such as:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;A full-fledged user management and ACL system, complete with an Audit Log and permissions&lt;&#x2F;li&gt;
&lt;li&gt;Support for custom Nginx configuration snippets, HTTP streams&lt;&#x2F;li&gt;
&lt;li&gt;Custom redirects and 404 pages&lt;&#x2F;li&gt;
&lt;li&gt;And much more&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Check it out and show some love: &lt;a href=&quot;https:&#x2F;&#x2F;nginxproxymanager.com&quot;&gt;https:&#x2F;&#x2F;nginxproxymanager.com&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
</description>
      </item>
      <item>
          <title>Set up your own VPN at home with Raspberry Pi</title>
          <pubDate>Tue, 23 Feb 2021 00:00:00 +0000</pubDate>
          <author>Unknown</author>
          <link>https://notthebe.ee/blog/set-up-your-own-vpn-on-raspberry-pi/</link>
          <guid>https://notthebe.ee/blog/set-up-your-own-vpn-on-raspberry-pi/</guid>
          <description>&lt;div class=&quot;post__image&quot;&gt;
    &lt;a href=&quot;https:&#x2F;&#x2F;notthebe.ee&#x2F;blog&#x2F;set-up-your-own-vpn-on-raspberry-pi&#x2F;title.jpg&quot; class=&quot;image-link&quot; target=&quot;_blank&quot;&gt;
        &lt;img src=&quot;https:&#x2F;&#x2F;notthebe.ee&#x2F;blog&#x2F;set-up-your-own-vpn-on-raspberry-pi&#x2F;title.jpg&quot; alt=&quot;Raspberry Pi under a Pilea plant&quot;&gt;
    &lt;&#x2F;a&gt;
&lt;&#x2F;div&gt;
&lt;h2 id=&quot;requirements&quot;&gt;Requirements&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;Globaly accessible IP address&lt;&#x2F;li&gt;
&lt;li&gt;A router that supports &lt;strong&gt;Port forwarding&lt;&#x2F;strong&gt;&lt;&#x2F;li&gt;
&lt;li&gt;Raspberry Pi 3 or newer&lt;&#x2F;li&gt;
&lt;li&gt;microUSB (RPi 3) or USB-C (RPi 4) power supply&lt;&#x2F;li&gt;
&lt;li&gt;microSD card (8GB or bigger, at least Class 4)&lt;&#x2F;li&gt;
&lt;li&gt;Ethernet cable&lt;&#x2F;li&gt;
&lt;li&gt;microSD USB card reader&lt;&#x2F;li&gt;
&lt;li&gt;(optional) microHDMI (RPi 4) or HDMI (RPi 3) to HDMI cable&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;downloading-the-software&quot;&gt;Downloading the software&lt;&#x2F;h2&gt;
&lt;p&gt;This tutorial is based on &lt;strong&gt;Raspberry Pi OS&lt;&#x2F;strong&gt;, but you can use any Debian-based operating system that you prefer.&lt;&#x2F;p&gt;
&lt;p&gt;Raspberry Pi OS comes in &lt;strong&gt;Desktop&lt;&#x2F;strong&gt; and &lt;strong&gt;Lite&lt;&#x2F;strong&gt; flavors. You can download the former if you want to set Raspberry Pi up with a monitor, a keyboard and a mouse; or the latter, if you want to set it up &amp;quot;headlessly&amp;quot;.&lt;&#x2F;p&gt;
&lt;p&gt;We will also need &lt;strong&gt;balenEtcher&lt;&#x2F;strong&gt; to write the OS image to the microSD card. Feel free to use &lt;strong&gt;dd&lt;&#x2F;strong&gt; or &lt;strong&gt;Rufus&lt;&#x2F;strong&gt;, if you&#x27;re more comfortable with them.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Download Raspberry Pi OS&lt;&#x2F;strong&gt;: &lt;a href=&quot;https:&#x2F;&#x2F;www.raspberrypi.org&#x2F;software&#x2F;operating-systems&#x2F;&quot;&gt;https:&#x2F;&#x2F;www.raspberrypi.org&#x2F;software&#x2F;operating-systems&#x2F;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Download balenaEtcher:&lt;&#x2F;strong&gt; &lt;a href=&quot;https:&#x2F;&#x2F;www.balena.io&#x2F;etcher&#x2F;&quot;&gt;https:&#x2F;&#x2F;www.balena.io&#x2F;etcher&#x2F;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;writing-the-os-image-to-the-card&quot;&gt;Writing the OS image to the card&lt;&#x2F;h2&gt;
&lt;p&gt;After you have both Etcher and Raspberry Pi OS on your computer, you can now insert the microSD card into your computer. Then, launch Etcher, choose the Raspberry Pi OS image that you downloaded, select your microSD card and click &amp;quot;Flash&amp;quot;.&lt;&#x2F;p&gt;
&lt;p&gt;After the flashing is done, you&#x27;ll see a new volume in &amp;quot;This PC&amp;quot; menu called &amp;quot;boot&amp;quot;. Go to that volume, create a new text file and call it &amp;quot;&lt;strong&gt;ssh&lt;&#x2F;strong&gt;&amp;quot; – be careful, it&#x27;s not &amp;quot;&lt;strong&gt;ssh.txt&lt;&#x2F;strong&gt;&amp;quot;, it&#x27;s &amp;quot;&lt;strong&gt;ssh&lt;&#x2F;strong&gt;&amp;quot;, without any extension. To do that, you need to have the &amp;quot;Hide extensions for known file types&amp;quot; option disabled in the File Exporer Options.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;booting-up&quot;&gt;Booting up&lt;&#x2F;h2&gt;
&lt;p&gt;With that done, you can now eject the microSD card from your computer. Now put the SD card into the Raspberry Pi, plug your Ethernet cable into the router and into the board, then finally plug the USB-C cable into it. In case you want to set your Raspberry Pi up with a monitor, you also need to plug in a monitor, a keyboard and a mouse into it at this point.&lt;&#x2F;p&gt;
&lt;div class=&quot;post__image&quot;&gt;
    &lt;a href=&quot;https:&#x2F;&#x2F;notthebe.ee&#x2F;blog&#x2F;set-up-your-own-vpn-on-raspberry-pi&#x2F;plugged_in.png&quot; class=&quot;image-link&quot; target=&quot;_blank&quot;&gt;
        &lt;img src=&quot;https:&#x2F;&#x2F;notthebe.ee&#x2F;blog&#x2F;set-up-your-own-vpn-on-raspberry-pi&#x2F;plugged_in.png&quot; alt=&quot;Raspberry Pi 4&quot;&gt;
    &lt;&#x2F;a&gt;
&lt;&#x2F;div&gt;
&lt;h2 id=&quot;for-monitor-users&quot;&gt;For monitor users&lt;&#x2F;h2&gt;
&lt;p&gt;The initial setup wizard on Raspberry Pi OS will guide you through the initial setup process, including changing the password and installing the updates. Afterwards, the installer will prompt you to reboot the board – do it and skip to the &amp;quot;Dynamic DNS&amp;quot; section.&lt;&#x2F;p&gt;
&lt;div class=&quot;post__image&quot;&gt;
    &lt;a href=&quot;https:&#x2F;&#x2F;notthebe.ee&#x2F;blog&#x2F;set-up-your-own-vpn-on-raspberry-pi&#x2F;raspberrypios.png&quot; class=&quot;image-link&quot; target=&quot;_blank&quot;&gt;
        &lt;img src=&quot;https:&#x2F;&#x2F;notthebe.ee&#x2F;blog&#x2F;set-up-your-own-vpn-on-raspberry-pi&#x2F;raspberrypios.png&quot; alt=&quot;Raspberry Pi OS Desktop&quot;&gt;
    &lt;&#x2F;a&gt;
&lt;&#x2F;div&gt;
&lt;h2 id=&quot;logging-into-the-system&quot;&gt;Logging into the system&lt;&#x2F;h2&gt;
&lt;p&gt;Now you need to wait for about a couple of minutes while your little computer is booting up, and then let&#x27;s open the browser again and go to the router&#x27;s admin panel. &lt;&#x2F;p&gt;
&lt;p&gt;Go to the page that lists all of the devices connected to the network and copy the IP address of the Raspberry Pi (it will most likely have the hostname &lt;code&gt;raspberry&lt;&#x2F;code&gt;).&lt;&#x2F;p&gt;
&lt;p&gt;Next, open the Terminal on your host machine. You can use &lt;strong&gt;PowerShell&lt;&#x2F;strong&gt; on Windows.&lt;&#x2F;p&gt;
&lt;p&gt;Type the following command:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; class=&quot;language-bash z-code&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;ssh&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; pi@192.168.1.45 &lt;span class=&quot;z-comment z-line z-number-sign z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-begin z-shell&quot;&gt;#&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-comment z-line z-number-sign z-shell&quot;&gt; Replace with Raspberry Pi&amp;#39;s IP address&lt;&#x2F;span&gt;&lt;span class=&quot;z-comment z-line z-number-sign z-shell&quot;&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;You can use right mouse button to paste text in Windows PowerShell.&lt;&#x2F;p&gt;
&lt;p&gt;Answer &amp;quot;yes&amp;quot; to the next question, and type &lt;code&gt;raspberry&lt;&#x2F;code&gt; when asked for a password. &lt;strong&gt;The password will not be shown on the screen&lt;&#x2F;strong&gt;, not even the asterisks, and that applies to all of the password fields in the Linux command line interface.&lt;&#x2F;p&gt;
&lt;div class=&quot;post__image&quot;&gt;
    &lt;a href=&quot;https:&#x2F;&#x2F;notthebe.ee&#x2F;blog&#x2F;set-up-your-own-vpn-on-raspberry-pi&#x2F;loggedin.png&quot; class=&quot;image-link&quot; target=&quot;_blank&quot;&gt;
        &lt;img src=&quot;https:&#x2F;&#x2F;notthebe.ee&#x2F;blog&#x2F;set-up-your-own-vpn-on-raspberry-pi&#x2F;loggedin.png&quot; alt=&quot;Raspberry Pi SSH greeting&quot;&gt;
    &lt;&#x2F;a&gt;
&lt;&#x2F;div&gt;
&lt;h2 id=&quot;changing-the-password&quot;&gt;Changing the password&lt;&#x2F;h2&gt;
&lt;p&gt;First thing we need to do is change the default password to something more secure. We won&#x27;t be setting up public-key authentication in this tutorial, since the SSH port isn&#x27;t going to be exposed to the Internet. If you&#x27;d like to know more, check out &lt;a href=&quot;https:&#x2F;&#x2F;www.digitalocean.com&#x2F;community&#x2F;tutorials&#x2F;how-to-configure-ssh-key-based-authentication-on-a-linux-server&quot;&gt;this tutorial from Digital Ocean&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;In order to change the password you need to type &lt;code&gt;passwd&lt;&#x2F;code&gt; , type your current password (&lt;code&gt;raspberry&lt;&#x2F;code&gt;), and then type your new password twice.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;installing-updates&quot;&gt;Installing updates&lt;&#x2F;h2&gt;
&lt;p&gt;Next thing we&#x27;re gonna do is updating our operating system to all the latest versions of software. For that, type:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; class=&quot;language-bash z-code&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;sudo&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; apt update&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-logical z-and z-shell&quot;&gt;&amp;amp;&amp;amp;&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;sudo&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; apt upgrade&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;After the installation is complete and you see the green command prompt again, type &lt;code&gt;sudo reboot&lt;&#x2F;code&gt; to reboot the board.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;setting-up-dynamic-dns&quot;&gt;Setting up dynamic DNS&lt;&#x2F;h2&gt;
&lt;p&gt;Now that all of the preparations are finished, we need to get ourselves a dynamic DNS hostname. Unless you&#x27;re using a business broadband connection, your external IP address most likely changes dynamically every time your ISP feels like it. For that reason, we&#x27;ll need to set up a &lt;strong&gt;dynamic DNS service.&lt;&#x2F;strong&gt; For this tutorial I&#x27;ll be using a free plan from &lt;a href=&quot;http:&#x2F;&#x2F;freedns.afraid.org&quot;&gt;freedns.afraid.org&lt;&#x2F;a&gt; . That being said, you can use any service you want, I&#x27;m not endorsing any particular one.&lt;&#x2F;p&gt;
&lt;p&gt;After registering on the website and activating your account via email, click on the &amp;quot;Add a subdomain&amp;quot;. Here, the things we need to change are:&lt;&#x2F;p&gt;
&lt;div class=&quot;post__image&quot;&gt;
    &lt;a href=&quot;https:&#x2F;&#x2F;notthebe.ee&#x2F;blog&#x2F;set-up-your-own-vpn-on-raspberry-pi&#x2F;freedns.png&quot; class=&quot;image-link&quot; target=&quot;_blank&quot;&gt;
        &lt;img src=&quot;https:&#x2F;&#x2F;notthebe.ee&#x2F;blog&#x2F;set-up-your-own-vpn-on-raspberry-pi&#x2F;freedns.png&quot; alt=&quot;FreeDNS settings&quot;&gt;
    &lt;&#x2F;a&gt;
&lt;&#x2F;div&gt;
&lt;ul&gt;
&lt;li&gt;Subdomain – put whatever you want here&lt;&#x2F;li&gt;
&lt;li&gt;Domain – same&lt;&#x2F;li&gt;
&lt;li&gt;Destination – by default it&#x27;s going to have your current IP address in there, but you need to change it to 0.0.0.0 – that way we&#x27;ll be able to test if our dynamic IP assignment software actually works.&lt;&#x2F;li&gt;
&lt;li&gt;After that, type in the captcha and click on &amp;quot;Save!&amp;quot;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;installing-and-setting-up-ddclient&quot;&gt;Installing and setting up ddclient&lt;&#x2F;h2&gt;
&lt;p&gt;Now we need to log back in to our Raspberry Pi, by typing this command in the PowerShell or Terminal:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; class=&quot;language-bash z-code&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;ssh&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; pi@192.168.1.45 &lt;span class=&quot;z-comment z-line z-number-sign z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-begin z-shell&quot;&gt;#&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-comment z-line z-number-sign z-shell&quot;&gt; Replace with Raspberry Pi&amp;#39;s IP address&lt;&#x2F;span&gt;&lt;span class=&quot;z-comment z-line z-number-sign z-shell&quot;&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;&lt;strong&gt;Pro-tip:&lt;&#x2F;strong&gt; You can also press ↑ and that will give you the last command you entered. Next, enter the new password that you created earlier.&lt;&#x2F;p&gt;
&lt;p&gt;Now we need to install a piece of software called &lt;code&gt;ddclient&lt;&#x2F;code&gt;:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; class=&quot;language-bash z-code&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;sudo&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; apt install ddclient &lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;and press Enter. It&#x27;s going to ask you for some things so just pretend you don&#x27;t know anything by typing &amp;quot;Enter&amp;quot; until it gives up.&lt;&#x2F;p&gt;
&lt;p&gt;Now we need to tell ddclient which address it needs to update: &lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; class=&quot;language-bash z-code&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;sudo&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; nano &#x2F;etc&#x2F;ddclient.conf&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Let&#x27;s just delete all of the lines in the file and replace them with this:&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;daemon=5m
timeout=10
syslog=no # log update msgs to syslog
#mail=root # mail all msgs to root
#mail-failure=root # mail failed update msgs to root
pid=&#x2F;var&#x2F;run&#x2F;ddclient.pid # record PID in file.
ssl=yes # use ssl-support. Works with
# ssl-library

use=if, if=eth0
server=freedns.afraid.org
protocol=freedns
login=YOUR FREEDNS LOGIN
password=YOUR FREEDNS PASSWORD
your.freedns.domain
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;After that&#x27;s done press &lt;strong&gt;Control+O&lt;&#x2F;strong&gt; to save the file and &lt;strong&gt;Control+X&lt;&#x2F;strong&gt; to exit.&lt;&#x2F;p&gt;
&lt;p&gt;Another file that we need to edit is &lt;code&gt;&#x2F;etc&#x2F;default&#x2F;ddclient&lt;&#x2F;code&gt;. Here we need to change everything to &lt;code&gt;false&lt;&#x2F;code&gt; except for the &lt;code&gt;run_daemon&lt;&#x2F;code&gt; option. This one we need to change to &lt;code&gt;true&lt;&#x2F;code&gt;. Once that&#x27;s done, &lt;strong&gt;Control+O&lt;&#x2F;strong&gt;, &lt;strong&gt;Control+X&lt;&#x2F;strong&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Now that all of the configuration is done, let&#x27;s restart the ddclient service:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; class=&quot;language-bash z-code&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;sudo&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; systemctl restart ddclient&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Let&#x27;s check the service status now:&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;sudo systemctl status ddclient
Feb 16 15:05:25 raspberrypi ddclient[1806]: WARNING: Connection: close
Feb 16 15:05:25 raspberrypi ddclient[1806]: WARNING: Vary: Accept-Encoding
Feb 16 15:05:25 raspberrypi ddclient[1806]: WARNING: Cache-Control: no-store, no-cache, must-revalidate
Feb 16 15:05:25 raspberrypi ddclient[1806]: WARNING: Cache-Control: post-check=0, pre-check=0
Feb 16 15:05:25 raspberrypi ddclient[1806]: WARNING: Pragma: no-cache
Feb 16 15:05:25 raspberrypi ddclient[1806]: WARNING: Expires: Mon, 26 Jul 1997 05:00:00 GMT
Feb 16 15:05:25 raspberrypi ddclient[1806]: WARNING: X-Cache: MISS
Feb 16 15:05:25 raspberrypi ddclient[1806]: WARNING:  
Feb 16 15:05:25 raspberrypi ddclient[1806]: WARNING: Updated 1 host(s) your.freedns.domain to 13.37.420.69
Feb 16 15:05:25 raspberrypi ddclient[1806]: **FAILED: updating your.freedns.domain: Invalid reply.**
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;As you can see it actually says &lt;code&gt;FAILED&lt;&#x2F;code&gt;, but if you go back to our browser and refresh the page with the subdomain, you should see that 0.0.0.0 changed to your real IP address.&lt;&#x2F;p&gt;
&lt;p&gt;Finally, let&#x27;s make sure ddclient starts automatically every time we power our Raspberry Pi on:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; class=&quot;language-bash z-code&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;sudo&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; systemctl enable ddclient&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h2 id=&quot;setting-up-port-forwarding&quot;&gt;Setting up port forwarding&lt;&#x2F;h2&gt;
&lt;p&gt;Set up a new port forwarding entry for Raspberry Pi in your router&#x27;s administration panel. The settings are as follows:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Device&lt;&#x2F;strong&gt;: Raspberry Pi&#x27;s hostname or IP&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Protocol&lt;&#x2F;strong&gt;: UDP&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Port range&lt;&#x2F;strong&gt;: 51820-51820&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Outgoing port&lt;&#x2F;strong&gt;: 51820&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Permit Internet access&lt;&#x2F;strong&gt;: yes&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Here&#x27;s what the settings look like on a FritzBox router:&lt;&#x2F;p&gt;
&lt;div class=&quot;post__image&quot;&gt;
    &lt;a href=&quot;https:&#x2F;&#x2F;notthebe.ee&#x2F;blog&#x2F;set-up-your-own-vpn-on-raspberry-pi&#x2F;portfwd.png&quot; class=&quot;image-link&quot; target=&quot;_blank&quot;&gt;
        &lt;img src=&quot;https:&#x2F;&#x2F;notthebe.ee&#x2F;blog&#x2F;set-up-your-own-vpn-on-raspberry-pi&#x2F;portfwd.png&quot; alt=&quot;Port forwarding settings&quot;&gt;
    &lt;&#x2F;a&gt;
&lt;&#x2F;div&gt;
&lt;h2 id=&quot;installing-wireguard-vpn&quot;&gt;Installing Wireguard VPN&lt;&#x2F;h2&gt;
&lt;p&gt;Copy and the following command into the terminal (while logged into RPi):&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; class=&quot;language-bash z-code&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;wget&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; https:&#x2F;&#x2F;git.io&#x2F;wireguard&lt;span class=&quot;z-variable z-parameter z-option z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-parameter z-shell&quot;&gt; -&lt;&#x2F;span&gt;O&lt;&#x2F;span&gt; wireguard-install.sh&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-logical z-and z-shell&quot;&gt;&amp;amp;&amp;amp;&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;sudo&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; bash wireguard-install.sh&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;The script is going to ask you for the hostname that you want to use for the VPN – type your dynamic DNS domain that we created earlier.&lt;&#x2F;p&gt;
&lt;p&gt;For client name, just put any name you want, and for DNS, this is kind of personal preference – I personally use &lt;strong&gt;1.1.1.1&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Follow the instuctions on the screen further and wait until the installation is finished.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Important:&lt;&#x2F;strong&gt; You will need to add a new user for &lt;strong&gt;every device&lt;&#x2F;strong&gt; that you use with the VPN. To add a new user, simply re-run the script and follow the instructions.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;connecting-to-the-vpn-from-a-phone&quot;&gt;Connecting to the VPN from a phone&lt;&#x2F;h2&gt;
&lt;p&gt;Install the Wireguard app from Google Play or App Store&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Wireguard (Google Play):&lt;&#x2F;strong&gt; &lt;a href=&quot;https:&#x2F;&#x2F;play.google.com&#x2F;store&#x2F;apps&#x2F;details?id=com.wireguard.android&quot;&gt;https:&#x2F;&#x2F;play.google.com&#x2F;store&#x2F;apps&#x2F;details?id=com.wireguard.android&lt;&#x2F;a&gt; &lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Wireguard (App Store):&lt;&#x2F;strong&gt; &lt;a href=&quot;https:&#x2F;&#x2F;apps.apple.com&#x2F;us&#x2F;app&#x2F;wireguard&#x2F;id1441195209&quot;&gt;https:&#x2F;&#x2F;apps.apple.com&#x2F;us&#x2F;app&#x2F;wireguard&#x2F;id1441195209&lt;&#x2F;a&gt; &lt;&#x2F;p&gt;
&lt;p&gt;Scan the QR code shown in the terminal using the function &lt;strong&gt;Create from QR code&lt;&#x2F;strong&gt; in the app.&lt;&#x2F;p&gt;
&lt;div class=&quot;post__image&quot;&gt;
    &lt;a href=&quot;https:&#x2F;&#x2F;notthebe.ee&#x2F;blog&#x2F;set-up-your-own-vpn-on-raspberry-pi&#x2F;qr_code.png&quot; class=&quot;image-link&quot; target=&quot;_blank&quot;&gt;
        &lt;img src=&quot;https:&#x2F;&#x2F;notthebe.ee&#x2F;blog&#x2F;set-up-your-own-vpn-on-raspberry-pi&#x2F;qr_code.png&quot; alt=&quot;FreeDNS Settings&quot;&gt;
    &lt;&#x2F;a&gt;
&lt;&#x2F;div&gt;
&lt;p&gt;Disconnect from the WiFi and test the VPN connection using cellular network. Your can check your external IP address &lt;a href=&quot;http:&#x2F;&#x2F;whoer.net&quot;&gt;here&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;connecting-to-the-vpn-from-a-pc-windows&quot;&gt;Connecting to the VPN from a PC (Windows)&lt;&#x2F;h2&gt;
&lt;p&gt;Connecting to our VPN from a computer requires a few additional steps. &lt;&#x2F;p&gt;
&lt;p&gt;First, we need to move the configuration files to our home directory. For that, log in to the Raspberry Pi from the terminal, and type:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; class=&quot;language-bash z-code&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;sudo&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; su&lt;&#x2F;span&gt;
&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;cp&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; &#x2F;root&#x2F;&lt;span class=&quot;z-keyword z-operator z-regexp z-quantifier z-shell&quot;&gt;*&lt;&#x2F;span&gt;.conf &#x2F;home&#x2F;pi&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Create a folder for the Wireguard configuration files in Windows Explorer. Go to that folder, right-click on the empty space and click &amp;quot;Open a PowerShell window here&amp;quot;. Press ↑ to get the latest command and replace &lt;code&gt;ssh&lt;&#x2F;code&gt; with &lt;code&gt;sftp&lt;&#x2F;code&gt;. Press Enter to execute.&lt;&#x2F;p&gt;
&lt;p&gt;After you&#x27;ve entered your password, you can now copy the configuration file to your machine. For that, type &lt;code&gt;get *.conf&lt;&#x2F;code&gt; and press Enter. After the file is copied, type &lt;code&gt;exit&lt;&#x2F;code&gt; to quit the sftp interface.&lt;&#x2F;p&gt;
&lt;p&gt;Now you can download the Wireguard desktop app and import the config file into it.&lt;&#x2F;p&gt;
&lt;div class=&quot;post__image&quot;&gt;
    &lt;a href=&quot;https:&#x2F;&#x2F;notthebe.ee&#x2F;blog&#x2F;set-up-your-own-vpn-on-raspberry-pi&#x2F;wireguard_desktop.png&quot; class=&quot;image-link&quot; target=&quot;_blank&quot;&gt;
        &lt;img src=&quot;https:&#x2F;&#x2F;notthebe.ee&#x2F;blog&#x2F;set-up-your-own-vpn-on-raspberry-pi&#x2F;wireguard_desktop.png&quot; alt=&quot;Wireguard Desktop&quot;&gt;
    &lt;&#x2F;a&gt;
&lt;&#x2F;div&gt;
&lt;p&gt;&lt;strong&gt;Wireguard client apps:&lt;&#x2F;strong&gt; &lt;a href=&quot;https:&#x2F;&#x2F;www.wireguard.com&#x2F;install&#x2F;&quot;&gt;https:&#x2F;&#x2F;www.wireguard.com&#x2F;install&#x2F;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
</description>
      </item>
      <item>
          <title>Split VPN tunelling for selected applications (Windows, Linux, macOS)</title>
          <pubDate>Wed, 11 Nov 2020 00:00:00 +0000</pubDate>
          <author>Unknown</author>
          <link>https://notthebe.ee/blog/split-vpn-tunnelling-for-selected-applications/</link>
          <guid>https://notthebe.ee/blog/split-vpn-tunnelling-for-selected-applications/</guid>
          <description>&lt;p&gt;&lt;div class=&quot;post__image&quot;&gt;
    &lt;a href=&quot;https:&#x2F;&#x2F;notthebe.ee&#x2F;blog&#x2F;split-vpn-tunnelling-for-selected-applications&#x2F;screenshot.png&quot; class=&quot;image-link&quot; target=&quot;_blank&quot;&gt;
        &lt;img src=&quot;https:&#x2F;&#x2F;notthebe.ee&#x2F;blog&#x2F;split-vpn-tunnelling-for-selected-applications&#x2F;screenshot.png&quot; alt=&quot;docker-compose.yml&quot;&gt;
    &lt;&#x2F;a&gt;
&lt;&#x2F;div&gt;

Sometimes you need to use VPN for a few selected applications, but not for your whole Internet traffic. However, most operating systems do not include that functionality. &lt;&#x2F;p&gt;
&lt;p&gt;In this tutorial we will create a local proxy for our VPN using Docker and &lt;a href=&quot;https:&#x2F;&#x2F;hub.docker.com&#x2F;r&#x2F;binhex&#x2F;arch-delugevpn&quot;&gt;binhex&#x2F;arch-delugevpn&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;windows&quot;&gt;Windows&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;installing-wsl2&quot;&gt;Installing WSL2&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;strong&gt;IMPORTANT:&lt;&#x2F;strong&gt; At the moment of writing, Microsoft&#x27;s version of the Linux kernel does not include the Wireguard module by default. You can try your luck by compiling the kernel and the module manually, but I didn&#x27;t manage to make it work on my machine. Hence, I recommend using OpenVPN with Windows.&lt;&#x2F;p&gt;
&lt;p&gt;Open the start menu and type “Turn&amp;quot;. Click on the first result, &lt;strong&gt;Turn Windows features on or off&lt;&#x2F;strong&gt;. Here we need to enable two things — &lt;strong&gt;Virtual Machine Platform&lt;&#x2F;strong&gt; and &lt;strong&gt;Windows Subsystem for Linux&lt;&#x2F;strong&gt;.&lt;&#x2F;p&gt;
&lt;div class=&quot;post__image&quot;&gt;
    &lt;a href=&quot;https:&#x2F;&#x2F;notthebe.ee&#x2F;blog&#x2F;split-vpn-tunnelling-for-selected-applications&#x2F;features.png&quot; class=&quot;image-link&quot; target=&quot;_blank&quot;&gt;
        &lt;img src=&quot;https:&#x2F;&#x2F;notthebe.ee&#x2F;blog&#x2F;split-vpn-tunnelling-for-selected-applications&#x2F;features.png&quot; alt=&quot;Turn Windows features on or off&quot;&gt;
    &lt;&#x2F;a&gt;
&lt;&#x2F;div&gt;
&lt;p&gt;You can also do the same by typing the following commands in Powershell:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;powershell&quot; class=&quot;language-powershell z-code&quot;&gt;&lt;code class=&quot;language-powershell&quot; data-lang=&quot;powershell&quot;&gt;&lt;span class=&quot;z-source z-powershell&quot;&gt;&lt;span class=&quot;z-support z-function z-powershell&quot;&gt;dism.exe&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-assignment z-powershell&quot;&gt;&#x2F;&lt;&#x2F;span&gt;online &lt;span class=&quot;z-keyword z-operator z-assignment z-powershell&quot;&gt;&#x2F;&lt;&#x2F;span&gt;&lt;span class=&quot;z-support z-function z-powershell&quot;&gt;enable-feature&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-assignment z-powershell&quot;&gt;&#x2F;&lt;&#x2F;span&gt;featurename:Microsoft&lt;span class=&quot;z-keyword z-operator z-assignment z-powershell&quot;&gt;-&lt;&#x2F;span&gt;Windows&lt;span class=&quot;z-keyword z-operator z-assignment z-powershell&quot;&gt;-&lt;&#x2F;span&gt;Subsystem&lt;span class=&quot;z-keyword z-operator z-assignment z-powershell&quot;&gt;-&lt;&#x2F;span&gt;Linux &lt;span class=&quot;z-keyword z-operator z-assignment z-powershell&quot;&gt;&#x2F;&lt;&#x2F;span&gt;all &lt;span class=&quot;z-keyword z-operator z-assignment z-powershell&quot;&gt;&#x2F;&lt;&#x2F;span&gt;norestart
&lt;span class=&quot;z-support z-function z-powershell&quot;&gt;dism.exe&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-assignment z-powershell&quot;&gt;&#x2F;&lt;&#x2F;span&gt;online &lt;span class=&quot;z-keyword z-operator z-assignment z-powershell&quot;&gt;&#x2F;&lt;&#x2F;span&gt;&lt;span class=&quot;z-support z-function z-powershell&quot;&gt;enable-feature&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-assignment z-powershell&quot;&gt;&#x2F;&lt;&#x2F;span&gt;featurename:VirtualMachinePlatform &lt;span class=&quot;z-keyword z-operator z-assignment z-powershell&quot;&gt;&#x2F;&lt;&#x2F;span&gt;all &lt;span class=&quot;z-keyword z-operator z-assignment z-powershell&quot;&gt;&#x2F;&lt;&#x2F;span&gt;norestart
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;After that, we need to restart Windows to complete the installation – press the &lt;strong&gt;Restart now&lt;&#x2F;strong&gt; button.&lt;&#x2F;p&gt;
&lt;p&gt;After Windows starts up, go to the Start Menu again and type &amp;quot;power&amp;quot;. Open PowerShell and type &lt;code&gt;wsl --set-default-version 2&lt;&#x2F;code&gt;. After that, download the &lt;a href=&quot;https:&#x2F;&#x2F;docs.microsoft.com&#x2F;en-us&#x2F;windows&#x2F;wsl&#x2F;wsl2-kernel&quot;&gt;Linux kernel update for WSL2&lt;&#x2F;a&gt; and install it.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;installing-docker-desktop&quot;&gt;Installing Docker Desktop&lt;&#x2F;h3&gt;
&lt;p&gt;Download Docker Desktop for Windows from the &lt;a href=&quot;https:&#x2F;&#x2F;www.docker.com&#x2F;products&#x2F;docker-desktop&quot;&gt;official Docker website&lt;&#x2F;a&gt;. After the installation is complete, press &lt;strong&gt;Close and log out&lt;&#x2F;strong&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;installing-ubuntu-20-04&quot;&gt;Installing Ubuntu 20.04&lt;&#x2F;h3&gt;
&lt;p&gt;After you log back in, you&#x27;ll see the Docker Desktop screen. But before configuring docker, we need to install a WSL distro from which we&#x27;re going to use in order to manage our container. &lt;&#x2F;p&gt;
&lt;p&gt;Open Microsoft Store and search for your favorite distribution. Personally, I recommend &lt;a href=&quot;https:&#x2F;&#x2F;www.microsoft.com&#x2F;en-us&#x2F;p&#x2F;ubuntu-2004-lts&#x2F;9n6svws3rx71&quot;&gt;Ubuntu 20.04 LTS&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Once that&#x27;s installed, click on &amp;quot;Launch&amp;quot;. Type in your desired username and password in the terminal, and after that you should get the bash prompt. &lt;&#x2F;p&gt;
&lt;p&gt;Now go back to Docker Desktop, open the Settings and untick the &amp;quot;Send usage statistics&amp;quot;. Then, go to Resources &amp;gt; WSL INTEGRATION and enable &amp;quot;Ubuntu 20.04&amp;quot;. Close the Linux terminal window and open it again from the Start menu.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;notthebe.ee&#x2F;blog&#x2F;split-vpn-tunnelling-for-selected-applications&#x2F;img&#x2F;vpn2&#x2F;docker.png&quot; alt=&quot;Docker Settings&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;creating-folders-and-writing-a-compose-file&quot;&gt;Creating folders and writing a compose file&lt;&#x2F;h3&gt;
&lt;p&gt;In the Linux terminal, type:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; class=&quot;language-bash z-code&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;mkdir&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt;&lt;span class=&quot;z-variable z-parameter z-option z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-parameter z-shell&quot;&gt; -&lt;&#x2F;span&gt;p&lt;&#x2F;span&gt; &#x2F;mnt&#x2F;c&#x2F;Users&#x2F;WINDOWS_USER_NAME&#x2F;docker&#x2F;arch-delugevpn&#x2F;data&lt;&#x2F;span&gt;
&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;mkdir&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt;&lt;span class=&quot;z-variable z-parameter z-option z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-parameter z-shell&quot;&gt; -&lt;&#x2F;span&gt;p&lt;&#x2F;span&gt; &#x2F;mnt&#x2F;c&#x2F;Users&#x2F;WINDOWS_USER_NAME&#x2F;docker&#x2F;arch-delugevpn&#x2F;config&#x2F;openvpn&lt;&#x2F;span&gt;
&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;mkdir&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt;&lt;span class=&quot;z-variable z-parameter z-option z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-parameter z-shell&quot;&gt; -&lt;&#x2F;span&gt;p&lt;&#x2F;span&gt; &#x2F;mnt&#x2F;c&#x2F;Users&#x2F;WINDOWS_USER_NAME&#x2F;docker&#x2F;arch-delugevpn&#x2F;config&#x2F;compose&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;This will create a folder named &lt;strong&gt;docker&lt;&#x2F;strong&gt; in your Windows user&#x27;s directory and all the necessary subfolders. &lt;&#x2F;p&gt;
&lt;p&gt;Now create a file named &lt;code&gt;docker-compose.yml&lt;&#x2F;code&gt; in the &lt;strong&gt;compose&lt;&#x2F;strong&gt; folder with the following contents:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;yaml&quot; class=&quot;language-yaml z-code&quot;&gt;&lt;code class=&quot;language-yaml&quot; data-lang=&quot;yaml&quot;&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-yaml&quot;&gt;version&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-quoted z-single z-yaml&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-yaml&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;3&lt;span class=&quot;z-punctuation z-definition z-string z-end z-yaml&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-yaml&quot;&gt;services&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt;
        &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-yaml&quot;&gt;delugevpn&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt;
                &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-yaml&quot;&gt;container_name&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;delugevpn&lt;&#x2F;span&gt;
                &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-yaml&quot;&gt;image&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;binhex&#x2F;arch-delugevpn:latest&lt;&#x2F;span&gt;
                &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-yaml&quot;&gt;restart&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;unless-stopped&lt;&#x2F;span&gt;
                &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-yaml&quot;&gt;cap_add&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt;
                        &lt;span class=&quot;z-punctuation z-definition z-block z-sequence z-item z-yaml&quot;&gt;-&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;net_admin&lt;&#x2F;span&gt; &lt;span class=&quot;z-comment z-line z-number-sign z-yaml&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-line z-number-sign z-yaml&quot;&gt;#&lt;&#x2F;span&gt; Necessary for OpenVPN
&lt;&#x2F;span&gt;                &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-yaml&quot;&gt;ports&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt;
                        &lt;span class=&quot;z-punctuation z-definition z-block z-sequence z-item z-yaml&quot;&gt;-&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;0.0.0.0:8112:8112&lt;&#x2F;span&gt;
                        &lt;span class=&quot;z-punctuation z-definition z-block z-sequence z-item z-yaml&quot;&gt;-&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;58846:58846&lt;&#x2F;span&gt;
                        &lt;span class=&quot;z-punctuation z-definition z-block z-sequence z-item z-yaml&quot;&gt;-&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;0.0.0.0:8118:8118&lt;&#x2F;span&gt;
                &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-yaml&quot;&gt;environment&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt;
                        &lt;span class=&quot;z-punctuation z-definition z-block z-sequence z-item z-yaml&quot;&gt;-&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;VPN_ENABLED=yes&lt;&#x2F;span&gt;
                        &lt;span class=&quot;z-punctuation z-definition z-block z-sequence z-item z-yaml&quot;&gt;-&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;VPN_PROV=custom&lt;&#x2F;span&gt;
                        &lt;span class=&quot;z-punctuation z-definition z-block z-sequence z-item z-yaml&quot;&gt;-&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;VPN_CLIENT=openvpn&lt;&#x2F;span&gt;
                        &lt;span class=&quot;z-punctuation z-definition z-block z-sequence z-item z-yaml&quot;&gt;-&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;ENABLE_PRIVOXY=yes&lt;&#x2F;span&gt;
                        &lt;span class=&quot;z-punctuation z-definition z-block z-sequence z-item z-yaml&quot;&gt;-&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;LAN_NETWORK=192.168.178.0&#x2F;24&lt;&#x2F;span&gt; &lt;span class=&quot;z-comment z-line z-number-sign z-yaml&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-line z-number-sign z-yaml&quot;&gt;#&lt;&#x2F;span&gt; Replace with your network&amp;#39;s IP
&lt;&#x2F;span&gt;                        &lt;span class=&quot;z-punctuation z-definition z-block z-sequence z-item z-yaml&quot;&gt;-&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;NAME_SERVERS=1.1.1.1,1.0.0.1&lt;&#x2F;span&gt;
                        &lt;span class=&quot;z-punctuation z-definition z-block z-sequence z-item z-yaml&quot;&gt;-&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;DELUGE_DAEMON_LOG_LEVEL=info&lt;&#x2F;span&gt;
                        &lt;span class=&quot;z-punctuation z-definition z-block z-sequence z-item z-yaml&quot;&gt;-&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;DELUGE_WEB_LOG_LEVEL=info&lt;&#x2F;span&gt;
                        &lt;span class=&quot;z-punctuation z-definition z-block z-sequence z-item z-yaml&quot;&gt;-&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;DEBUG=false&lt;&#x2F;span&gt;
                        &lt;span class=&quot;z-punctuation z-definition z-block z-sequence z-item z-yaml&quot;&gt;-&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;UMASK=000&lt;&#x2F;span&gt;
                        &lt;span class=&quot;z-punctuation z-definition z-block z-sequence z-item z-yaml&quot;&gt;-&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;PUID=1000&lt;&#x2F;span&gt;
                        &lt;span class=&quot;z-punctuation z-definition z-block z-sequence z-item z-yaml&quot;&gt;-&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;PGID=1000&lt;&#x2F;span&gt;
                        &lt;span class=&quot;z-punctuation z-definition z-block z-sequence z-item z-yaml&quot;&gt;-&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;TZ=Europe&#x2F;Amsterdam&lt;&#x2F;span&gt; &lt;span class=&quot;z-comment z-line z-number-sign z-yaml&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-line z-number-sign z-yaml&quot;&gt;#&lt;&#x2F;span&gt; Replace with your timezone – check https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;List_of_tz_database_time_zones for reference
&lt;&#x2F;span&gt;                &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-yaml&quot;&gt;volumes&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt;
                        &lt;span class=&quot;z-punctuation z-definition z-block z-sequence z-item z-yaml&quot;&gt;-&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;&#x2F;mnt&#x2F;c&#x2F;Users&#x2F;WINDOWS_USER_NAME&#x2F;docker&#x2F;arch-delugevpn&#x2F;data:&#x2F;data&lt;&#x2F;span&gt; &lt;span class=&quot;z-comment z-line z-number-sign z-yaml&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-line z-number-sign z-yaml&quot;&gt;#&lt;&#x2F;span&gt; Replace WINDOWS_USER_NAME with your actual username
&lt;&#x2F;span&gt;                        &lt;span class=&quot;z-punctuation z-definition z-block z-sequence z-item z-yaml&quot;&gt;-&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;&#x2F;mnt&#x2F;c&#x2F;Users&#x2F;WINDOWS_USER_NAME&#x2F;docker&#x2F;arch-delugevpn&#x2F;config:&#x2F;config&lt;&#x2F;span&gt;
                        &lt;span class=&quot;z-punctuation z-definition z-block z-sequence z-item z-yaml&quot;&gt;-&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;&#x2F;etc&#x2F;localtime:&#x2F;etc&#x2F;localtime:ro&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Some additional information for the parameters:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;VPN_PROV&lt;&#x2F;code&gt; — set it to &lt;code&gt;custom&lt;&#x2F;code&gt; if you&#x27;re using a self-hosted VPN. There are also some other options, such as &lt;code&gt;pia&lt;&#x2F;code&gt; or &lt;code&gt;airvpn&lt;&#x2F;code&gt;, check out the &lt;a href=&quot;https:&#x2F;&#x2F;hub.docker.com&#x2F;r&#x2F;binhex&#x2F;arch-delugevpn&quot;&gt;container documentation&lt;&#x2F;a&gt; if you&#x27;re interested&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;VPN_CLIENT&lt;&#x2F;code&gt; — You can set it either to &lt;code&gt;openvpn&lt;&#x2F;code&gt; or &lt;code&gt;wireguard&lt;&#x2F;code&gt; — once again, I couldn&#x27;t make Wireguard work on Windows, so I will be using OpenVPN&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;LAN_NETWORK&lt;&#x2F;code&gt; — If you don&#x27;t know the IP of your LAN network, open a PowerShell window and type &lt;code&gt;ipconfig&lt;&#x2F;code&gt;. Copy the first three numbers from the &lt;code&gt;IPv4 Address&lt;&#x2F;code&gt; field and paste them to the &lt;code&gt;LAN_NETWORK&lt;&#x2F;code&gt; field in the compose file. Append a 0 as the fourth number and add &lt;code&gt;&#x2F;24&lt;&#x2F;code&gt; at the end.&lt;&#x2F;li&gt;
&lt;li&gt;In the &lt;code&gt;volumes&lt;&#x2F;code&gt; section you need to expose the config and downloads folders, as well as the &lt;strong&gt;localtime&lt;&#x2F;strong&gt; file to the container. The latter will remain the same in any case, no matter which folders you created, but for the first two — put the path to the folder on your local machine on the left and the path in the container on the right. In this case, the container path for &lt;strong&gt;config&lt;&#x2F;strong&gt; folder is &lt;code&gt;&#x2F;config&lt;&#x2F;code&gt; and the downloads are located in &lt;code&gt;&#x2F;data&#x2F;incomplete&lt;&#x2F;code&gt; by default, but you can put them anywhere and change the download path in the torrent client later.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;running-the-container&quot;&gt;Running the container&lt;&#x2F;h3&gt;
&lt;p&gt;Once you&#x27;re done, save the file and quit. Now we&#x27;re ready to run our container — type &lt;code&gt;docker-compose up -d&lt;&#x2F;code&gt;. But once that&#x27;s done — wait for about 10 seconds, and if you did everything correctly you should be able to see &lt;strong&gt;Privoxy process listening on port 8118&lt;&#x2F;strong&gt; when you type &lt;code&gt;docker logs delugevpn&lt;&#x2F;code&gt;. &lt;&#x2F;p&gt;
&lt;h3 id=&quot;working-with-deluge&quot;&gt;Working with Deluge&lt;&#x2F;h3&gt;
&lt;p&gt;Open a browser and go to localhost:8112. You will get a password prompt and the default password here is &amp;quot;deluge&amp;quot;. You can change it latter in the settings. &lt;&#x2F;p&gt;
&lt;h3 id=&quot;privoxy-proxy&quot;&gt;Privoxy proxy&lt;&#x2F;h3&gt;
&lt;p&gt;You can now access the proxy by pointing your applications to &lt;code&gt;localhost:8112&lt;&#x2F;code&gt;. Here&#x27;s an example of what that looks like in Firefox:&lt;&#x2F;p&gt;
&lt;div class=&quot;post__image&quot;&gt;
    &lt;a href=&quot;https:&#x2F;&#x2F;notthebe.ee&#x2F;blog&#x2F;split-vpn-tunnelling-for-selected-applications&#x2F;firefox.png&quot; class=&quot;image-link&quot; target=&quot;_blank&quot;&gt;
        &lt;img src=&quot;https:&#x2F;&#x2F;notthebe.ee&#x2F;blog&#x2F;split-vpn-tunnelling-for-selected-applications&#x2F;firefox.png&quot; alt=&quot;Firefox Network Settings&quot;&gt;
    &lt;&#x2F;a&gt;
&lt;&#x2F;div&gt;
&lt;p&gt;Privoxy also features ad&#x2F;tracker filtering and other functinonality. To access the settings, open &lt;a href=&quot;http:&#x2F;&#x2F;config.privoxy.org&quot;&gt;http:&#x2F;&#x2F;config.privoxy.org&lt;&#x2F;a&gt; in your browser.
You can also use &lt;a href=&quot;https:&#x2F;&#x2F;addons.mozilla.org&#x2F;en-US&#x2F;firefox&#x2F;addon&#x2F;foxyproxy-standard&#x2F;&quot;&gt;FoxyProxy&lt;&#x2F;a&gt; in Firefox for advanced whitelisting&#x2F;blacklisting functionality with regular expressions.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;linux&quot;&gt;Linux&lt;&#x2F;h2&gt;
&lt;p&gt;On Linux this whole process takes less than 5 minutes. Open a terminal and type the following commands:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; class=&quot;language-bash z-code&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;sudo&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; pacman&lt;span class=&quot;z-variable z-parameter z-option z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-parameter z-shell&quot;&gt; -&lt;&#x2F;span&gt;S&lt;&#x2F;span&gt; docker docker-compose &lt;span class=&quot;z-comment z-line z-number-sign z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-begin z-shell&quot;&gt;#&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-comment z-line z-number-sign z-shell&quot;&gt; Will obviously differ depending on the distribution&lt;&#x2F;span&gt;&lt;span class=&quot;z-comment z-line z-number-sign z-shell&quot;&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;sudo&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; usermod&lt;span class=&quot;z-variable z-parameter z-option z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-parameter z-shell&quot;&gt; -&lt;&#x2F;span&gt;aG&lt;&#x2F;span&gt; docker username&lt;&#x2F;span&gt;
&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;sudo&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; systemctl enable&lt;span class=&quot;z-variable z-parameter z-option z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-parameter z-shell&quot;&gt; --&lt;&#x2F;span&gt;now&lt;&#x2F;span&gt; docker&lt;&#x2F;span&gt;

&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;mkdir&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt;&lt;span class=&quot;z-variable z-parameter z-option z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-parameter z-shell&quot;&gt; -&lt;&#x2F;span&gt;p&lt;&#x2F;span&gt; &#x2F;home&#x2F;LINUX_USERNAME&#x2F;docker&#x2F;arch-delugevpn&#x2F;data&lt;&#x2F;span&gt;
&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;mkdir&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt;&lt;span class=&quot;z-variable z-parameter z-option z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-parameter z-shell&quot;&gt; -&lt;&#x2F;span&gt;p&lt;&#x2F;span&gt; &#x2F;home&#x2F;LINUX_USERNAME&#x2F;docker&#x2F;arch-delugevpn&#x2F;compose&lt;&#x2F;span&gt;
&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;mkdir&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt;&lt;span class=&quot;z-variable z-parameter z-option z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-parameter z-shell&quot;&gt; -&lt;&#x2F;span&gt;p&lt;&#x2F;span&gt; &#x2F;home&#x2F;LINUX_USERNAME&#x2F;docker&#x2F;arch-delugevpn&#x2F;config&#x2F;wireguard &lt;span class=&quot;z-comment z-line z-number-sign z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-begin z-shell&quot;&gt;#&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-comment z-line z-number-sign z-shell&quot;&gt; If you&amp;#39;re using Wireguard&lt;&#x2F;span&gt;&lt;span class=&quot;z-comment z-line z-number-sign z-shell&quot;&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;mkdir&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt;&lt;span class=&quot;z-variable z-parameter z-option z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-parameter z-shell&quot;&gt; -&lt;&#x2F;span&gt;p&lt;&#x2F;span&gt; &#x2F;home&#x2F;LINUX_USERNAME&#x2F;docker&#x2F;arch-delugevpn&#x2F;config&#x2F;openvpn &lt;span class=&quot;z-comment z-line z-number-sign z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-begin z-shell&quot;&gt;#&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-comment z-line z-number-sign z-shell&quot;&gt; If you&amp;#39;re using OpenVPN&lt;&#x2F;span&gt;&lt;span class=&quot;z-comment z-line z-number-sign z-shell&quot;&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;The &lt;code&gt;docker-compose.yml&lt;&#x2F;code&gt; will look a little bit different for Wireguard. In particular, we need to add the following lines:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;yaml&quot; class=&quot;language-yaml z-code&quot;&gt;&lt;code class=&quot;language-yaml&quot; data-lang=&quot;yaml&quot;&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;                &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-yaml&quot;&gt;privileged&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-language z-boolean z-yaml&quot;&gt;true&lt;&#x2F;span&gt;
                &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-yaml&quot;&gt;sysctls&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt;
                        &lt;span class=&quot;z-punctuation z-definition z-block z-sequence z-item z-yaml&quot;&gt;-&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-quoted z-double z-yaml&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-yaml&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;net.ipv4.conf.all.src_valid_mark=1&lt;span class=&quot;z-punctuation z-definition z-string z-end z-yaml&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Now reboot. After booting up you can launch the container by running &lt;code&gt;docker-compose up -d&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;macos&quot;&gt;macOS&lt;&#x2F;h2&gt;
&lt;p&gt;On macOS the process is similar to Windows with a few exceptions:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Wireguard actually works&lt;&#x2F;li&gt;
&lt;li&gt;Docker Desktop is available in &lt;a href=&quot;https:&#x2F;&#x2F;brew.sh&#x2F;&quot;&gt;Homebrew&lt;&#x2F;a&gt; repositories. To install it, type &lt;code&gt;brew cask install docker&lt;&#x2F;code&gt;&lt;&#x2F;li&gt;
&lt;li&gt;The performance might be slightly inferior to Windows, since macOS doesn&#x27;t feature WSL2&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
</description>
      </item>
      <item>
          <title>Windows 10 AME – Make Windows Suck Less!</title>
          <pubDate>Mon, 07 Sep 2020 00:00:00 +0000</pubDate>
          <author>Unknown</author>
          <link>https://notthebe.ee/blog/windows10-ame/</link>
          <guid>https://notthebe.ee/blog/windows10-ame/</guid>
          <description>&lt;div class=&quot;post__image&quot;&gt;
    &lt;a href=&quot;https:&#x2F;&#x2F;notthebe.ee&#x2F;blog&#x2F;windows10-ame&#x2F;screenshot.png&quot; class=&quot;image-link&quot; target=&quot;_blank&quot;&gt;
        &lt;img src=&quot;https:&#x2F;&#x2F;notthebe.ee&#x2F;blog&#x2F;windows10-ame&#x2F;screenshot.png&quot; alt=&quot;Windows 10 AME&quot;&gt;
    &lt;&#x2F;a&gt;
&lt;&#x2F;div&gt;
&lt;p&gt;&lt;em&gt;Please refer to the official AME documentation for an up-to-date version&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;ameliorated.info&#x2F;documentation.html&quot;&gt;https:&#x2F;&#x2F;ameliorated.info&#x2F;documentation.html&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;downloading-and-verifying-windows-10-iso&quot;&gt;Downloading and verifying Windows 10 ISO&lt;&#x2F;h2&gt;
&lt;p&gt;Download the Windows 10 ISO using &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;pbatard&#x2F;Fido&quot;&gt;Fido&lt;&#x2F;a&gt; (Windows-only) or &lt;a href=&quot;https:&#x2F;&#x2F;tb.rg-adguard.net&#x2F;public.php&quot;&gt;TechBench&lt;&#x2F;a&gt;. Choose a version that is officially supported by AME Project for the most stable experience, or alternatively, try your luck with the latest version. Make sure to choose the correct UI language, &lt;strong&gt;you can&#x27;t change it after the installation&lt;&#x2F;strong&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Calcualte the SHA1 sum of the ISO using &lt;a href=&quot;https:&#x2F;&#x2F;www.adaic.org&#x2F;resources&#x2F;add_content&#x2F;standards&#x2F;articles&#x2F;SHA-1.html&quot;&gt;sha1sum&lt;&#x2F;a&gt;. &lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Updated 08.09.2020:&lt;&#x2F;strong&gt; You can also use this PowerShell commmand to calculate the SHA1 sum on Windows without any third party tools (Thank you, @GezeikVan)&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;Get-FileHash -Algorithm SHA1 Windows_2004.iso
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Use &lt;a href=&quot;https:&#x2F;&#x2F;sha1.rg-adguard.net&#x2F;&quot;&gt;AdGuard SHA1 catalog&lt;&#x2F;a&gt; to verify the ISO checksum against the MSDN image database.&lt;&#x2F;p&gt;
&lt;div class=&quot;post__image&quot;&gt;
    &lt;a href=&quot;https:&#x2F;&#x2F;notthebe.ee&#x2F;blog&#x2F;windows10-ame&#x2F;success.png&quot; class=&quot;image-link&quot; target=&quot;_blank&quot;&gt;
        &lt;img src=&quot;https:&#x2F;&#x2F;notthebe.ee&#x2F;blog&#x2F;windows10-ame&#x2F;success.png&quot; alt=&quot;ISO Verification&quot;&gt;
    &lt;&#x2F;a&gt;
&lt;&#x2F;div&gt;
&lt;h2 id=&quot;downloading-updates&quot;&gt;Downloading updates&lt;&#x2F;h2&gt;
&lt;p&gt;Use &lt;a href=&quot;https:&#x2F;&#x2F;support.microsoft.com&#x2F;en-us&#x2F;help&#x2F;4555932&#x2F;windows-10-update-history&quot;&gt;Windows 10 Update History&lt;&#x2F;a&gt; page to determinte the KBs of the newest Cumulative update and the SSU for your Windows version. Look up the KBs in the &lt;a href=&quot;https:&#x2F;&#x2F;www.catalog.update.microsoft.com&#x2F;Home.aspx&quot;&gt;Microsoft Update Catalog&lt;&#x2F;a&gt; and download the update packages for your architecture.&lt;&#x2F;p&gt;
&lt;div class=&quot;post__image&quot;&gt;
    &lt;a href=&quot;https:&#x2F;&#x2F;notthebe.ee&#x2F;blog&#x2F;windows10-ame&#x2F;updates.png&quot; class=&quot;image-link&quot; target=&quot;_blank&quot;&gt;
        &lt;img src=&quot;https:&#x2F;&#x2F;notthebe.ee&#x2F;blog&#x2F;windows10-ame&#x2F;updates.png&quot; alt=&quot;Windows 10 Update History&quot;&gt;
    &lt;&#x2F;a&gt;
&lt;&#x2F;div&gt;
&lt;h2 id=&quot;creating-a-bootable-media&quot;&gt;Creating a bootable media&lt;&#x2F;h2&gt;
&lt;p&gt;Use &lt;a href=&quot;https:&#x2F;&#x2F;rufus.ie&quot;&gt;Rufus&lt;&#x2F;a&gt; to create a bootable USB drive from the Windows 10 ISO. On Linux you can use &lt;strong&gt;WoeUSB&lt;&#x2F;strong&gt; instead. Copy the update packages and Rufus executable to the flash drive. Download a Debian-based Linux LiveUSB image, for example &lt;a href=&quot;https:&#x2F;&#x2F;xubuntu.org&quot;&gt;Xubuntu&lt;&#x2F;a&gt; and copy it to the USB drive as well. You might also want to add drivers for your PC. &lt;&#x2F;p&gt;
&lt;p&gt;You will also need the newest version of the Amelioration script from the &lt;a href=&quot;https:&#x2F;&#x2F;ameliorated.info&#x2F;documentation.html&quot;&gt;AME website&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;installing-windows&quot;&gt;Installing Windows&lt;&#x2F;h2&gt;
&lt;p&gt;&lt;strong&gt;Disconnect from the Ethernet&#x2F;Wi-Fi&lt;&#x2F;strong&gt; and don&#x27;t connect back until we run the Linux AME script. &lt;&#x2F;p&gt;
&lt;p&gt;Install Windows as usual and make sure to answer &amp;quot;No&amp;quot; to every question about telemetry&#x2F;data collection&#x2F;geolocation&#x2F;etc.&lt;&#x2F;p&gt;
&lt;p&gt;After the installation&#x2F;setup process is complete, do the following things:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Unpin all tiles from the Start menu&lt;&#x2F;li&gt;
&lt;li&gt;Remove the search bar from the taskbar&lt;&#x2F;li&gt;
&lt;li&gt;Remove task view icon from the taskbar&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;These settings might not be available after the &amp;quot;amelioration&amp;quot; process is finished.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;installing-updates&quot;&gt;Installing updates&lt;&#x2F;h2&gt;
&lt;p&gt;Open the PowerShell as Administrator and type the following commands:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;cmd&quot; class=&quot;language-cmd z-code&quot;&gt;&lt;code class=&quot;language-cmd&quot; data-lang=&quot;cmd&quot;&gt;&lt;span class=&quot;z-source z-dosbatch&quot;&gt;&lt;span class=&quot;z-keyword z-command z-dosbatch&quot;&gt;mkdir&lt;&#x2F;span&gt; C:&#x2F;SSU
&lt;span class=&quot;z-keyword z-command z-dosbatch&quot;&gt;mkdir&lt;&#x2F;span&gt; C:&#x2F;Cumulative
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Go to the flash drive, open the folder with the update packages, Shift+Right click on the empty space in Explorer and click &amp;quot;Open PowerShell window here&amp;quot;. &lt;&#x2F;p&gt;
&lt;p&gt;Unpack the updates. You can tell the SSU apart from the Cumulative update by comparing the package sizes: the SSU file is much smaller than the one for the Cumulative update.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;cmd&quot; class=&quot;language-cmd z-code&quot;&gt;&lt;code class=&quot;language-cmd&quot; data-lang=&quot;cmd&quot;&gt;&lt;span class=&quot;z-source z-dosbatch&quot;&gt;&lt;span class=&quot;z-keyword z-command z-dosbatch&quot;&gt;expand&lt;&#x2F;span&gt; -F:* name_of_the_ssu_package.msu C:\SSU
&lt;span class=&quot;z-keyword z-command z-dosbatch&quot;&gt;expand&lt;&#x2F;span&gt; -F:* name_of_the_cumulative_package.msu C:\Cumulative
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Install the SSU update first. Copy the filename of the CAB package from Explorer, since you won&#x27;t be able to utilize auto-completion for the DISM command:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;cmd&quot; class=&quot;language-cmd z-code&quot;&gt;&lt;code class=&quot;language-cmd&quot; data-lang=&quot;cmd&quot;&gt;&lt;span class=&quot;z-source z-dosbatch&quot;&gt;dism &#x2F;online &#x2F;add-package &#x2F;packagepath=C:\SSU\name_of_the_ssu.cab
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Reboot after applying the SSU and install the Cumulative update:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;cmd&quot; class=&quot;language-cmd z-code&quot;&gt;&lt;code class=&quot;language-cmd&quot; data-lang=&quot;cmd&quot;&gt;&lt;span class=&quot;z-source z-dosbatch&quot;&gt;dism &#x2F;online &#x2F;add-package &#x2F;packagepath=C:\Cumulative\name_of_the_cumulative.cab
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;&lt;strong&gt;Reboot twice&lt;&#x2F;strong&gt; after the Cumulative update has been installed.&lt;&#x2F;p&gt;
&lt;p&gt;Finally, launch the cleanup task to get rid of the update cache:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;cmd&quot; class=&quot;language-cmd z-code&quot;&gt;&lt;code class=&quot;language-cmd&quot; data-lang=&quot;cmd&quot;&gt;&lt;span class=&quot;z-source z-dosbatch&quot;&gt;dism &#x2F;online &#x2F;Cleanup-Image &#x2F;StartComponentCleanup
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h2 id=&quot;running-the-amelioration-script&quot;&gt;Running the amelioration script&lt;&#x2F;h2&gt;
&lt;p&gt;Open the flash drive folder and run the AME script as Administrator. Choose &lt;code&gt;1. Run Pre-Amelioration&lt;&#x2F;code&gt; in the menu and wait for the process to finish&lt;&#x2F;p&gt;
&lt;p&gt;Afterwards, choose &lt;code&gt;3. User Permissions&lt;&#x2F;code&gt;. Reset the Administrator password and change your user privileges from &amp;quot;Administrator&amp;quot; to &amp;quot;Standard User&amp;quot;.&lt;&#x2F;p&gt;
&lt;p&gt;Log out when asked to, use the Ctrl+Alt+Del menu to log out manually if necessary.&lt;&#x2F;p&gt;
&lt;p&gt;After logging back in, run PowerShell as Administrator and reset your password:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;cmd&quot; class=&quot;language-cmd z-code&quot;&gt;&lt;code class=&quot;language-cmd&quot; data-lang=&quot;cmd&quot;&gt;&lt;span class=&quot;z-source z-dosbatch&quot;&gt;&lt;span class=&quot;z-keyword z-command z-dosbatch&quot;&gt;net user&lt;&#x2F;span&gt; username *
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Enter the password twice. The symbols won&#x27;t appear in the command line as you type.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;creating-a-linux-bootable-media&quot;&gt;Creating a Linux bootable media&lt;&#x2F;h2&gt;
&lt;p&gt;Copy the flash drive folder to your desktop and use &lt;a href=&quot;https:&#x2F;&#x2F;rufus.ie&quot;&gt;Rufus&lt;&#x2F;a&gt; to wipe the Windows bootable flash drive and create a Linux USB drive. Reboot into BIOS, re-enable the Internet connection and then boot into Linux&lt;&#x2F;p&gt;
&lt;h2 id=&quot;running-the-linux-amelioration-script&quot;&gt;Running the Linux amelioration script&lt;&#x2F;h2&gt;
&lt;p&gt;Mount the Windows drive. Then, navigate to &lt;a href=&quot;https:&#x2F;&#x2F;ameliorated.info&#x2F;documentation.html&quot;&gt;ameliorated.info&lt;&#x2F;a&gt; and copy the download link for the Linux AME script. &lt;&#x2F;p&gt;
&lt;p&gt;Go to the Windows drive, open the terminal in the root folder. Type &lt;code&gt;sudo su&lt;&#x2F;code&gt; and then type &lt;code&gt;wget &amp;lt;paste the download link&amp;gt;&lt;&#x2F;code&gt;. This will give you root privileges and download the AME script to the root of the Windows drive.&lt;&#x2F;p&gt;
&lt;p&gt;As of writing this, running the script produces an error due to incompatible newline symbols:&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;bash: &amp;#39;\r&amp;#39;: command not found
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;You can either use a sed script to convert the newline symbols to UNIX ones: &lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; class=&quot;language-bash z-code&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;sed&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt;&lt;span class=&quot;z-variable z-parameter z-option z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-parameter z-shell&quot;&gt; -&lt;&#x2F;span&gt;i&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-quoted z-single z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-shell&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;s&#x2F;\r$&#x2F;&#x2F;&lt;span class=&quot;z-punctuation z-definition z-string z-end z-shell&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; filename&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Alternatively, use &lt;code&gt;dos2unix&lt;&#x2F;code&gt;:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; class=&quot;language-bash z-code&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;apt-get&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; update&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-logical z-and z-shell&quot;&gt;&amp;amp;&amp;amp;&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;apt-get&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; install dos2unix&lt;&#x2F;span&gt;
&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;dos2unix&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; filename&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Now you can run the script by typing &lt;code&gt;bash filename&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;After the script is finished with no errors, you can now reboot into Windows with the Internet connection enabled.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;post-amelioration&quot;&gt;Post-Amelioration&lt;&#x2F;h2&gt;
&lt;p&gt;Since most of the default Windows applications, including Internet Explorer, Windows Media Player, Photos, etc. are eliminated, we need to install something to replace them.&lt;&#x2F;p&gt;
&lt;p&gt;Edit the AME script that we ran for pre-amelioration and go to the following line:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; class=&quot;language-bash z-code&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;choco&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; install&lt;span class=&quot;z-variable z-parameter z-option z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-parameter z-shell&quot;&gt; -&lt;&#x2F;span&gt;y&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-parameter z-option z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-parameter z-shell&quot;&gt; --&lt;&#x2F;span&gt;force&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-parameter z-option z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-parameter z-shell&quot;&gt; --&lt;&#x2F;span&gt;allow-empty-checksums&lt;&#x2F;span&gt; firefox thunderbird vlc youtube-dl 7zip open-shell jpegview vcredist-all directx onlyoffice&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Add the &lt;code&gt;-installArgs ADDLOCAL=StartMenu&lt;&#x2F;code&gt; after the &lt;code&gt;open-shell&lt;&#x2F;code&gt; text in order to opt out of &amp;quot;Classic Explorer&amp;quot; part of the OpenShell (doesn&#x27;t work on the current version of Windows as of writing this).&lt;&#x2F;p&gt;
&lt;p&gt;By default, the following applications are installed:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Firefox&lt;&#x2F;li&gt;
&lt;li&gt;Thunderbird&lt;&#x2F;li&gt;
&lt;li&gt;VLC&lt;&#x2F;li&gt;
&lt;li&gt;JPEGView&lt;&#x2F;li&gt;
&lt;li&gt;OpenShell (a Windows 7-style Start Menu replacement)&lt;&#x2F;li&gt;
&lt;li&gt;OnlyOffice&lt;&#x2F;li&gt;
&lt;li&gt;7Zip&lt;&#x2F;li&gt;
&lt;li&gt;youtube-dl&lt;&#x2F;li&gt;
&lt;li&gt;Various Windows runtimes (.NET, C++) and DirectX&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Feel free to replace or remove the applications in this list depending on your personal preferences.&lt;&#x2F;p&gt;
&lt;p&gt;After making the adjustments, run the script as Administrator and choose &lt;code&gt;2. Run Post-Amelioration&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;hardening-windows-settings&quot;&gt;Hardening Windows settings&lt;&#x2F;h2&gt;
&lt;p&gt;Download &lt;a href=&quot;https:&#x2F;&#x2F;securitywithoutborders.org&#x2F;tools&#x2F;hardentools.html&quot;&gt;Hardentools&lt;&#x2F;a&gt; by Security Without Borders. Run the script as Administrator, reboot after the process is finished.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;changing-input-language&quot;&gt;Changing input language&lt;&#x2F;h2&gt;
&lt;p&gt;You can remove&#x2F;add a new input language using PowerShell.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;powershell&quot; class=&quot;language-powershell z-code&quot;&gt;&lt;code class=&quot;language-powershell&quot; data-lang=&quot;powershell&quot;&gt;&lt;span class=&quot;z-source z-powershell&quot;&gt;&lt;span class=&quot;z-variable z-other z-readwrite z-powershell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-powershell&quot;&gt;$&lt;&#x2F;span&gt;List&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-assignment z-powershell&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-support z-function z-powershell&quot;&gt;Get-WinUserLanguageList&lt;&#x2F;span&gt;
&lt;span class=&quot;z-variable z-other z-readwrite z-powershell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-powershell&quot;&gt;$&lt;&#x2F;span&gt;List&lt;span class=&quot;z-variable z-other z-member z-powershell&quot;&gt;.add&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-powershell&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-interpolated z-simple z-source z-powershell&quot;&gt;&lt;span class=&quot;z-keyword z-operator z-redirection z-powershell&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;language&lt;span class=&quot;z-keyword z-operator z-assignment z-powershell&quot;&gt;-&lt;&#x2F;span&gt;code&lt;span class=&quot;z-keyword z-operator z-redirection z-powershell&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-powershell&quot;&gt;)&lt;&#x2F;span&gt;
&lt;span class=&quot;z-variable z-other z-readwrite z-powershell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-powershell&quot;&gt;$&lt;&#x2F;span&gt;List&lt;span class=&quot;z-variable z-other z-member z-powershell&quot;&gt;.remove&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-powershell&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-interpolated z-simple z-source z-powershell&quot;&gt;&lt;span class=&quot;z-keyword z-operator z-redirection z-powershell&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;language&lt;span class=&quot;z-keyword z-operator z-assignment z-powershell&quot;&gt;-&lt;&#x2F;span&gt;code&lt;span class=&quot;z-keyword z-operator z-redirection z-powershell&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-powershell&quot;&gt;)&lt;&#x2F;span&gt;
&lt;span class=&quot;z-support z-function z-powershell&quot;&gt;Set-WinUserLanguageList&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-other z-readwrite z-powershell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-powershell&quot;&gt;$&lt;&#x2F;span&gt;List&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Replace &lt;code&gt;&amp;lt;language_code&amp;gt;&lt;&#x2F;code&gt; with your language code (e.g. &amp;quot;ru&amp;quot; for Russian or &amp;quot;de-DE&amp;quot; for German)&lt;&#x2F;p&gt;
&lt;h2 id=&quot;installing-drivers&quot;&gt;Installing drivers&lt;&#x2F;h2&gt;
&lt;p&gt;The drivers can be installed by downloading the driver package (sometimes called &amp;quot;SCCM&amp;quot;) for your machine, unpacking it in a folder and executing this command in an elevated shell:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;cmd&quot; class=&quot;language-cmd z-code&quot;&gt;&lt;code class=&quot;language-cmd&quot; data-lang=&quot;cmd&quot;&gt;&lt;span class=&quot;z-source z-dosbatch&quot;&gt;pnputil.exe &#x2F;add-driver C:\MyDrivers\*.inf &#x2F;subdirs &#x2F;install &#x2F;reboot
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
</description>
      </item>
      <item>
          <title>Removing the Wi-Fi whitelist on Haswell Thinkpads (T440p, W540, T540, etc.)</title>
          <pubDate>Wed, 17 Jun 2020 00:00:00 +0000</pubDate>
          <author>Unknown</author>
          <link>https://notthebe.ee/blog/removing-the-wifi-whitelist/</link>
          <guid>https://notthebe.ee/blog/removing-the-wifi-whitelist/</guid>
          <description>&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=ce7kqUEccUM&quot;&gt;Video version&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&amp;quot;Wi-Fi whitelist&amp;quot; functionality has been introduced by Lenovo in 2012 to keep users from replacing Wifi cards on their Thinkpad laptops. If you try to install a card that wasn&#x27;t approved by Lenovo, your laptop will &lt;strong&gt;simply refuse to boot&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;div class=&quot;post__image&quot;&gt;
    &lt;a href=&quot;https:&#x2F;&#x2F;notthebe.ee&#x2F;blog&#x2F;removing-the-wifi-whitelist&#x2F;unauthorized.png&quot; class=&quot;image-link&quot; target=&quot;_blank&quot;&gt;
        &lt;img src=&quot;https:&#x2F;&#x2F;notthebe.ee&#x2F;blog&#x2F;removing-the-wifi-whitelist&#x2F;unauthorized.png&quot; alt=&quot;Unauthorized Wi-Fi card&quot;&gt;
    &lt;&#x2F;a&gt;
&lt;&#x2F;div&gt;
&lt;h2 id=&quot;disclaimer&quot;&gt;Disclaimer&lt;&#x2F;h2&gt;
&lt;ol&gt;
&lt;li&gt;This process is quite involved and requires at least a basic knowledge of Google and a steady hand. I provide zero warranty in case something goes wrong. This tutorial is fairly safe if you follow it carefully, but I&#x27;m not responsible for your laptop refusing to boot, taking fire, or shrinking in size.&lt;&#x2F;li&gt;
&lt;li&gt;I&#x27;ll be working on a &lt;strong&gt;Thinkpad T440p with BIOS version 2.52&lt;&#x2F;strong&gt;. I do not know whether it&#x27;s going to work on other BIOS versions or any other Haswell Thinkpads since I only have T440p, but it&#x27;s been reported to work on W540 and T540. The only way to find out is to try, and if something goes wrong you can always re-flash the original BIOS file.&lt;&#x2F;li&gt;
&lt;li&gt;This process &lt;strong&gt;does not&lt;&#x2F;strong&gt; remove the BIOS or Supervisor password&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;h2 id=&quot;gathering-supplies&quot;&gt;Gathering supplies&lt;&#x2F;h2&gt;
&lt;p&gt;Apart from the laptop itself, you will also need:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;a second laptop or desktop PC&lt;&#x2F;li&gt;
&lt;li&gt;a CH341a external programmer with an 8-pin clip, they&#x27;re usually sold together on websites like &lt;a href=&quot;https:&#x2F;&#x2F;www.ebay.com&#x2F;itm&#x2F;EEPROM-BIOS-USB-Programmer-CH341A-SOIC8-Clip-1-8V-Adapter-SOIC8-Adapter&#x2F;264715247642?hash=item3da242201a:g:JlYAAOSwpSlekDy~&quot;&gt;eBay&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;www.amazon.com&#x2F;Organizer-Socket-Adpter-Programmer-CH341A&#x2F;dp&#x2F;B07R5LPTYM&#x2F;ref=sr_1_1?dchild=1&amp;amp;keywords=ch341a&amp;amp;qid=1592406898&amp;amp;sr=8-1&quot;&gt;Amazon&lt;&#x2F;a&gt; or &lt;a href=&quot;https:&#x2F;&#x2F;www.aliexpress.com&#x2F;item&#x2F;32793476447.html?spm=a2g0o.productlist.0.0.2b689f58oUwIIz&amp;amp;algo_pvid=7552baef-b508-474c-be4a-4d317c72faac&amp;amp;algo_expid=7552baef-b508-474c-be4a-4d317c72faac-0&amp;amp;btsid=0b0a187915924069316147306e79d4&amp;amp;ws_ab_test=searchweb0_0,searchweb201602_,searchweb201603_&quot;&gt;Aliexpress&lt;&#x2F;a&gt; for about $10.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;assembling-the-programmer&quot;&gt;Assembling the programmer&lt;&#x2F;h2&gt;
&lt;p&gt;Before using the programmer you also need to assemble it. Align the red wire on the clip with number &amp;quot;1&amp;quot; on the adapter, raise the lever on the programmer and plug the clip in the programmer as shown. Put down the lever.&lt;&#x2F;p&gt;
&lt;div class=&quot;post__image&quot;&gt;
    &lt;a href=&quot;https:&#x2F;&#x2F;notthebe.ee&#x2F;blog&#x2F;removing-the-wifi-whitelist&#x2F;ch341a_top.png&quot; class=&quot;image-link&quot; target=&quot;_blank&quot;&gt;
        &lt;img src=&quot;https:&#x2F;&#x2F;notthebe.ee&#x2F;blog&#x2F;removing-the-wifi-whitelist&#x2F;ch341a_top.png&quot; alt=&quot;CH341a – Top view&quot;&gt;
    &lt;&#x2F;a&gt;
&lt;&#x2F;div&gt;
&lt;div class=&quot;post__image&quot;&gt;
    &lt;a href=&quot;https:&#x2F;&#x2F;notthebe.ee&#x2F;blog&#x2F;removing-the-wifi-whitelist&#x2F;ch341a_side.png&quot; class=&quot;image-link&quot; target=&quot;_blank&quot;&gt;
        &lt;img src=&quot;https:&#x2F;&#x2F;notthebe.ee&#x2F;blog&#x2F;removing-the-wifi-whitelist&#x2F;ch341a_side.png&quot; alt=&quot;CH341a – Side view&quot;&gt;
    &lt;&#x2F;a&gt;
&lt;&#x2F;div&gt;
&lt;h2 id=&quot;installing-software&quot;&gt;Installing software&lt;&#x2F;h2&gt;
&lt;p&gt;First, we need to install three things on our second computer: &lt;a href=&quot;https:&#x2F;&#x2F;flashrom.org&#x2F;Flashrom&quot;&gt;flashrom&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;LongSoft&#x2F;UEFITool&#x2F;releases&quot;&gt;UEFIPatch&lt;&#x2F;a&gt; and &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;thrimbor&#x2F;thinkpad-uefi-sign&quot;&gt;thinkpad-uefi-sign&lt;&#x2F;a&gt;. You&#x27;ll also need to download the &lt;a href=&quot;https:&#x2F;&#x2F;pastebin.com&#x2F;TZYnnmY8&quot;&gt;text file with patches&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;On Linux you can simply install flashrom from your distro&#x27;s repositories. On Ubuntu the command is &lt;code&gt;sudo apt install flashrom&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;p&gt;If you&#x27;re on Mac you&#x27;ll have to install the &lt;a href=&quot;https:&#x2F;&#x2F;brew.sh&#x2F;&quot;&gt;Homebrew&lt;&#x2F;a&gt; package manager. After that you can install flashrom by simply typing &lt;code&gt;brew install flashrom&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;p&gt;On Windows, using flashrom is somewhat complicated since you&#x27;ll need a special driver that can&#x27;t be installed on 64-bit versions of Windows without some tinkering. You can find unofficial versions of flashrom with the USB drivers already included on the Internet, but use them at your own risk. The best option would be to follow this tutorial from an Ubuntu LiveCD.&lt;&#x2F;p&gt;
&lt;p&gt;Installing UEFIPatch is easy: simply download the right version for your operating system from the Github and unpack it. Remove both text files from the folder to avoid any confusion.&lt;&#x2F;p&gt;
&lt;p&gt;After that, clone the thinkpad-uefi-sign Github repository or simply download the ZIP and unpack it into the same folder that you used for UEFIPatch.&lt;&#x2F;p&gt;
&lt;div class=&quot;post__image&quot;&gt;
    &lt;a href=&quot;https:&#x2F;&#x2F;notthebe.ee&#x2F;blog&#x2F;removing-the-wifi-whitelist&#x2F;folder.png&quot; class=&quot;image-link&quot; target=&quot;_blank&quot;&gt;
        &lt;img src=&quot;https:&#x2F;&#x2F;notthebe.ee&#x2F;blog&#x2F;removing-the-wifi-whitelist&#x2F;folder.png&quot; alt=&quot;UEFIPatch folder&quot;&gt;
    &lt;&#x2F;a&gt;
&lt;&#x2F;div&gt;
&lt;h2 id=&quot;preparing-the-patches&quot;&gt;Preparing the patches&lt;&#x2F;h2&gt;
&lt;p&gt;Download the text file with patches from the video description, move it to the UEFIPatch folder and open it with your favorite text editor. Here we&#x27;re going to put a hash symbol in front of every patch that we don&#x27;t want to be applied. The two bottom patches that unlock advanced memory settings are already commented out, and since I&#x27;ll be doing it on a T440p, I&#x27;ll also comment out the patches for T440 and L540. The file also contains a patch that unlocks the hidden advanced settings in BIOS, but if you don&#x27;t want that for some reason, put a hash symbol in front of the line. Save the file and quit.&lt;&#x2F;p&gt;
&lt;div class=&quot;post__image&quot;&gt;
    &lt;a href=&quot;https:&#x2F;&#x2F;notthebe.ee&#x2F;blog&#x2F;removing-the-wifi-whitelist&#x2F;patches.png&quot; class=&quot;image-link&quot; target=&quot;_blank&quot;&gt;
        &lt;img src=&quot;https:&#x2F;&#x2F;notthebe.ee&#x2F;blog&#x2F;removing-the-wifi-whitelist&#x2F;patches.png&quot; alt=&quot;Text file with patches&quot;&gt;
    &lt;&#x2F;a&gt;
&lt;&#x2F;div&gt;
&lt;h2 id=&quot;dumping-the-bios&quot;&gt;Dumping the BIOS&lt;&#x2F;h2&gt;
&lt;p&gt;Turn your laptop upside down, remove the battery and take off the base cover. Take a good look at the motherboard and eventually you&#x27;ll see a BIOS chip. If you&#x27;re doing it on a different laptop, your BIOS chip might be at a different location and you might need to take the laptop apart completely to access it.&lt;&#x2F;p&gt;
&lt;div class=&quot;post__image&quot;&gt;
    &lt;a href=&quot;https:&#x2F;&#x2F;notthebe.ee&#x2F;blog&#x2F;removing-the-wifi-whitelist&#x2F;chip_location_t440p.png&quot; class=&quot;image-link&quot; target=&quot;_blank&quot;&gt;
        &lt;img src=&quot;https:&#x2F;&#x2F;notthebe.ee&#x2F;blog&#x2F;removing-the-wifi-whitelist&#x2F;chip_location_t440p.png&quot; alt=&quot;Chip location on T440p&quot;&gt;
    &lt;&#x2F;a&gt;
&lt;&#x2F;div&gt;
&lt;p&gt;Next, align the dimple on the top of the chip and the red wire on your programmer clip and put a clip on the chip. Don&#x27;t plug the USB programmer into your second laptop yet and double check that your battery is removed. Be careful, anchor the clip on one side and then close it in on the other side. Look at it from all sides and make sure the clip sits tightly on the chip.&lt;&#x2F;p&gt;
&lt;div class=&quot;post__image&quot;&gt;
    &lt;a href=&quot;https:&#x2F;&#x2F;notthebe.ee&#x2F;blog&#x2F;removing-the-wifi-whitelist&#x2F;dimple.png&quot; class=&quot;image-link&quot; target=&quot;_blank&quot;&gt;
        &lt;img src=&quot;https:&#x2F;&#x2F;notthebe.ee&#x2F;blog&#x2F;removing-the-wifi-whitelist&#x2F;dimple.png&quot; alt=&quot;Dimple&quot;&gt;
    &lt;&#x2F;a&gt;
&lt;&#x2F;div&gt;
&lt;p&gt;&lt;div class=&quot;post__image&quot;&gt;
    &lt;a href=&quot;https:&#x2F;&#x2F;notthebe.ee&#x2F;blog&#x2F;removing-the-wifi-whitelist&#x2F;clip_on_the_chip_side.jpg&quot; class=&quot;image-link&quot; target=&quot;_blank&quot;&gt;
        &lt;img src=&quot;https:&#x2F;&#x2F;notthebe.ee&#x2F;blog&#x2F;removing-the-wifi-whitelist&#x2F;clip_on_the_chip_side.jpg&quot; alt=&quot;Clip on the chip – side view&quot;&gt;
    &lt;&#x2F;a&gt;
&lt;&#x2F;div&gt;

&lt;div class=&quot;post__image&quot;&gt;
    &lt;a href=&quot;https:&#x2F;&#x2F;notthebe.ee&#x2F;blog&#x2F;removing-the-wifi-whitelist&#x2F;clip_on_the_chip_isometric.jpg&quot; class=&quot;image-link&quot; target=&quot;_blank&quot;&gt;
        &lt;img src=&quot;https:&#x2F;&#x2F;notthebe.ee&#x2F;blog&#x2F;removing-the-wifi-whitelist&#x2F;clip_on_the_chip_isometric.jpg&quot; alt=&quot;Clip on the chip – isometric view&quot;&gt;
    &lt;&#x2F;a&gt;
&lt;&#x2F;div&gt;
&lt;&#x2F;p&gt;
&lt;p&gt;Next up we&#x27;re going to plug the programmer into our second laptop and open a terminal. Go to UEFIPatch folder and type this command:&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;sudo flashrom -p ch341a_spi -r bios1.img
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;If you get a &amp;quot;No chip found&amp;quot; error, unplug the USB programmer from the laptop and try to re-seat the clip on the chip. Sometimes the connection isn&#x27;t strong enough, and usually fiddling with the clip helps.&lt;&#x2F;p&gt;
&lt;p&gt;After flashrom has finished reading your chip, repeat the same command again, but this time replace the &lt;code&gt;bios1&lt;&#x2F;code&gt; with &lt;code&gt;bios2&lt;&#x2F;code&gt;:&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;sudo flashrom -p ch341a_spi -r bios2.img
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Next, we&#x27;re going to compare the two BIOS dumps to make sure they&#x27;re identical:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; class=&quot;language-bash z-code&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;diff&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; bios1.img bios2.img&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;If this returns nothing, we&#x27;re good to go. But if it says &amp;quot;Files are different&amp;quot;, you need to unplug the USB programmer, re-seat the clip on the chip and try again.&lt;&#x2F;p&gt;
&lt;p&gt;After that&#x27;s done, you can delete the second file since both  are identical anyway. DO NOT delete the first file, keep it somewhere safe: this is going to be your backup in case something goes wrong.&lt;&#x2F;p&gt;
&lt;p&gt;Now, unplug the USB programmer so that you don&#x27;t accidentally yank the clip. You can also leave the clip on the chip, since we&#x27;ll have to put in back in a minute anyway.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;patching-the-bios&quot;&gt;Patching the BIOS&lt;&#x2F;h2&gt;
&lt;p&gt;Now we&#x27;re going to patch the BIOS file and remove the Wi-Fi whitelist. Make sure you have UEFIPatch and the BIOS file in the same folder and type&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; class=&quot;language-bash z-code&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;.&#x2F;UEFIPatch&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; bios1.img xx40_patches_v5.txt&lt;span class=&quot;z-variable z-parameter z-option z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-parameter z-shell&quot;&gt; -&lt;&#x2F;span&gt;o&lt;&#x2F;span&gt; bios_patched.img&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;At this point we&#x27;re pretty much done, but if you try and flash this BIOS file back to the chip, you&#x27;ll get a laptop that beeps 10 times every time you turn it on. This means that the BIOS is unsigned and somebody tampered with it [I wonder who that was]&lt;&#x2F;p&gt;
&lt;p&gt;To avoid that, we need to sign the BIOS file. But first, let&#x27;s install python3 and the &lt;strong&gt;pycryptodome&lt;&#x2F;strong&gt; package. On Mac you can do it by typing&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; class=&quot;language-bash z-code&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;brew&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; install python3&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;And on Linux you&#x27;ll have to install Python3 using your distro&#x27;s package manager.&lt;&#x2F;p&gt;
&lt;p&gt;After that, type&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; class=&quot;language-bash z-code&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;pip3&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; install pycryptodome&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Next, go to the folder where you unpacked UEFIPatch and thinkpad-uefi-sign and type:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; class=&quot;language-bash z-code&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;thinkpad-uefi-sign&#x2F;sign.py&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; bios_patched.img&lt;span class=&quot;z-variable z-parameter z-option z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-parameter z-shell&quot;&gt; -&lt;&#x2F;span&gt;o&lt;&#x2F;span&gt; bios_patched.img&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;And there we go, &amp;quot;image signed&amp;quot;. We can also verify the image by typing:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; class=&quot;language-bash z-code&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;thinkpad-uefi-sign&#x2F;sign.py&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; bios_patched.img&lt;span class=&quot;z-variable z-parameter z-option z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-parameter z-shell&quot;&gt; -&lt;&#x2F;span&gt;o&lt;&#x2F;span&gt; bios_patched.img&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;As you can see, it says &amp;quot;Signatures correct&amp;quot;&lt;&#x2F;p&gt;
&lt;p&gt;Now it&#x27;s time to flash the modded BIOS back to the laptop.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;flash-the-bios&quot;&gt;Flash the BIOS&lt;&#x2F;h2&gt;
&lt;p&gt;Re-connect the USB programmer to your second laptop and in case you removed the clip from the BIOS chip, put it on again.&lt;&#x2F;p&gt;
&lt;p&gt;The command we need to type now is&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; class=&quot;language-bash z-code&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;sudo&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; flashrom&lt;span class=&quot;z-variable z-parameter z-option z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-parameter z-shell&quot;&gt; -&lt;&#x2F;span&gt;p&lt;&#x2F;span&gt; ch341a_spi&lt;span class=&quot;z-variable z-parameter z-option z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-parameter z-shell&quot;&gt; -&lt;&#x2F;span&gt;w&lt;&#x2F;span&gt; bios_patched.img&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Wait for it to finish, unplug the USB programmer and remove the clip.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;IMPORTANT&lt;&#x2F;strong&gt;: Unplug the USB programmer FIRST, and THEN remove the clip. You might damage your laptop otherwise.&lt;&#x2F;p&gt;
&lt;p&gt;Put the lid back on the laptop, slide in the battery and turn the laptop on.&lt;&#x2F;p&gt;
&lt;p&gt;Verify that the laptop boots to the OS and connects to Wi-Fi networks.&lt;&#x2F;p&gt;
&lt;div class=&quot;post__image&quot;&gt;
    &lt;a href=&quot;https:&#x2F;&#x2F;notthebe.ee&#x2F;blog&#x2F;removing-the-wifi-whitelist&#x2F;wifi.png&quot; class=&quot;image-link&quot; target=&quot;_blank&quot;&gt;
        &lt;img src=&quot;https:&#x2F;&#x2F;notthebe.ee&#x2F;blog&#x2F;removing-the-wifi-whitelist&#x2F;wifi.png&quot; alt=&quot;Wifi networks&quot;&gt;
    &lt;&#x2F;a&gt;
&lt;&#x2F;div&gt;
&lt;p&gt;Congratulations! Your laptop is now free... as in connecting to all the Wi-Fi networks, I guess.&lt;&#x2F;p&gt;
&lt;p&gt;If you take a look at the BIOS menu, you&#x27;ll also see a bunch of new settings such as power limits, ACPI states and so on. Have fun!&lt;&#x2F;p&gt;
&lt;div class=&quot;post__image&quot;&gt;
    &lt;a href=&quot;https:&#x2F;&#x2F;notthebe.ee&#x2F;blog&#x2F;removing-the-wifi-whitelist&#x2F;bios.png&quot; class=&quot;image-link&quot; target=&quot;_blank&quot;&gt;
        &lt;img src=&quot;https:&#x2F;&#x2F;notthebe.ee&#x2F;blog&#x2F;removing-the-wifi-whitelist&#x2F;bios.png&quot; alt=&quot;Advanced BIOS settings&quot;&gt;
    &lt;&#x2F;a&gt;
&lt;&#x2F;div&gt;
&lt;h2 id=&quot;special-thanks&quot;&gt;Special thanks&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;Thrimbor &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;thrimbor&quot;&gt;https:&#x2F;&#x2F;github.com&#x2F;thrimbor&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;tonymacx86 &lt;a href=&quot;https:&#x2F;&#x2F;www.tonymacx86.com&#x2F;&quot;&gt;https:&#x2F;&#x2F;www.tonymacx86.com&#x2F;&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;XX and paranoidbashthot for developing the BootGuard bypass method and patches for xx40 onwards &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;digmorepaka&#x2F;thinkpad-firmware-patches&#x2F;&quot;&gt;https:&#x2F;&#x2F;github.com&#x2F;digmorepaka&#x2F;thinkpad-firmware-patches&#x2F;&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
</description>
      </item>
      <item>
          <title>Setting up an OpenVPN server from scratch on Ubuntu 20.04</title>
          <pubDate>Mon, 08 Jun 2020 00:00:00 +0000</pubDate>
          <author>Unknown</author>
          <link>https://notthebe.ee/blog/creating-your-own-vpn/</link>
          <guid>https://notthebe.ee/blog/creating-your-own-vpn/</guid>
          <description>&lt;div class=&quot;post__image&quot;&gt;
    &lt;a href=&quot;https:&#x2F;&#x2F;notthebe.ee&#x2F;blog&#x2F;creating-your-own-vpn&#x2F;openvpn-logo.png&quot; class=&quot;image-link&quot; target=&quot;_blank&quot;&gt;
        &lt;img src=&quot;https:&#x2F;&#x2F;notthebe.ee&#x2F;blog&#x2F;creating-your-own-vpn&#x2F;openvpn-logo.png&quot; alt=&quot;OpenVPN Logo&quot;&gt;
    &lt;&#x2F;a&gt;
&lt;&#x2F;div&gt;
&lt;h2 id=&quot;choosing-a-provider&quot;&gt;Choosing a provider&lt;&#x2F;h2&gt;
&lt;p&gt;In order to set up a VPN we need to find where we&#x27;re going to host it.&lt;&#x2F;p&gt;
&lt;p&gt;There are a lot of VPS providers that offer servers for as little as $2 per month, but there are a few things that you need to consider when choosing a VPS provider:&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Virtualisation technology&lt;&#x2F;strong&gt; — make sure your provider uses KVM or Xen instead of OpenVZ. OpenVZ is a container based virtualisation technology used on the cheapest bottom of the barrel VPS plans. OpenVZ machines run an old Linux kernel which isn&#x27;t supported by Wireguard, Docker and other modern software and the way OpenVZ is built lets your provider snoop on your activities and files very easily. Avoid it&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;An IPv4 address&lt;&#x2F;strong&gt; — this only applies to the ultra budget VPS options, but some of the providers only give you an IPv6 address. This is not as common nowadays, but because of the shortage of IPv4 addresses we might start seeing it more and more often&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Location&lt;&#x2F;strong&gt; – pretty self-explanatory. If you want to watch American content – choose an American data center. If you want to torrent Linux ISOs, don&#x27;t choose Germany or Austria because they have very strict anti-piracy laws. If you want to use your VPN for gaming, keep in mind that the further the server, the bigger the latency. If you&#x27;re really serious about privacy, choose a VPS outside of the 14 eyes.&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;In this tutorial I will be using &lt;a href=&quot;https:&#x2F;&#x2F;linode.com&#x2F;&quot;&gt;Linode&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;setting-up-an-account&quot;&gt;Setting up an account&lt;&#x2F;h2&gt;
&lt;p&gt;After you sign up on the website and confirm your email, you&#x27;re going to need to enter some details, including your name, address and credit card information. That&#x27;s going to be pretty much the same for all VPS providers though sometimes they accept Bitcoin or other cryptocurrencies.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;creating-a-vps&quot;&gt;Creating a VPS&lt;&#x2F;h2&gt;
&lt;p&gt;Next thing you need to do is add a server or as Linode calls it, a &amp;quot;linode&amp;quot;. There&#x27;s a lot of distros to choose from, if you want you can even go with Gentoo or Arch, but for this tutorial I&#x27;ll go with the latest version of Ubuntu.&lt;&#x2F;p&gt;
&lt;p&gt;You&#x27;ll also want to choose the location, I&#x27;m going to choose UK since it&#x27;s the closest to me physically.&lt;&#x2F;p&gt;
&lt;p&gt;We&#x27;re going to take the cheapest &amp;quot;Nanode&amp;quot; plan. And even if later on you decide to set up a mail server, a Nextcloud instance or a personal blog, this configuration will still be more than sufficient.&lt;&#x2F;p&gt;
&lt;p&gt;Linode Label is not that important, and neither are tags. I&#x27;ll call mine wolfgangsvpn.&lt;&#x2F;p&gt;
&lt;p&gt;After that you&#x27;ll need to choose a root password and upload an SSH key, which we&#x27;re not going to do now, i&#x27;ll explain why later. Lastly tick a box that says &amp;quot;Private IP&amp;quot; and click the create button on the right... and there we go, our server is now created.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;generating-ssh-keys&quot;&gt;Generating SSH keys&lt;&#x2F;h2&gt;
&lt;p&gt;Now you should see the control panel of your server, and while the server is starting, let&#x27;s generate the SSH keys for it. Using a cleartext password to log in to your server is never a good idea since the password is not encrypted in transit and can be exposed on a hostile network. By creating an SSH key we&#x27;re going to make it so that you can only log in to the server if you have the key file and the password, and at the same time the password is encrypted.&lt;&#x2F;p&gt;
&lt;p&gt;If you&#x27;re using Linux you probably already know how to open the terminal, if you&#x27;re on Mac you can find the Terminal app in your Applications folder, and on Windows 10 you&#x27;ll need to open the PowerShell with administrator&#x27;s privileges and install SSH using this command:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;powershell&quot; class=&quot;language-powershell z-code&quot;&gt;&lt;code class=&quot;language-powershell&quot; data-lang=&quot;powershell&quot;&gt;&lt;span class=&quot;z-source z-powershell&quot;&gt;PS C:\&lt;span class=&quot;z-keyword z-operator z-redirection z-powershell&quot;&gt;&amp;gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-support z-function z-powershell&quot;&gt;Add-WindowsCapability&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-assignment z-powershell&quot;&gt;-&lt;&#x2F;span&gt;Online &lt;span class=&quot;z-keyword z-operator z-assignment z-powershell&quot;&gt;-&lt;&#x2F;span&gt;Name OpenSSH.Client&lt;span class=&quot;z-keyword z-operator z-assignment z-powershell&quot;&gt;*&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;This is the command that will generate our ssh keys. The RSA algorithm with 4096 key size is what I&#x27;d personally recommend, since it&#x27;s sufficiently secure and widely supported.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; class=&quot;language-bash z-code&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;ssh-keygen&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt;&lt;span class=&quot;z-variable z-parameter z-option z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-parameter z-shell&quot;&gt; -&lt;&#x2F;span&gt;t&lt;&#x2F;span&gt; rsa&lt;span class=&quot;z-variable z-parameter z-option z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-parameter z-shell&quot;&gt; -&lt;&#x2F;span&gt;b&lt;&#x2F;span&gt; 4096&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Press Enter when asked for the key location to save it to the default one and then enter your password of choice.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;logging-in-to-the-server&quot;&gt;Logging in to the server&lt;&#x2F;h2&gt;
&lt;p&gt;By now our server has started up and we&#x27;re ready to log in. Copy the IP address from the server control panel, go back to the terminal and type in&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; class=&quot;language-bash z-code&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;ssh&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; root@ip-address&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Type yes, enter the root password that you specified in the first step and that&#x27;s it, we&#x27;re in.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;updating-the-os&quot;&gt;Updating the OS&lt;&#x2F;h2&gt;
&lt;p&gt;First and foremost, let&#x27;s update our operating system and software:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; class=&quot;language-bash z-code&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;apt-get&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; update&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-logical z-and z-shell&quot;&gt;&amp;amp;&amp;amp;&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;apt-get&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; upgrade&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;I&#x27;ll also install my favourite text editor, feel free to use whatever you want though, for example nano.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; class=&quot;language-bash z-code&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;apt&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; install neovim&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h2 id=&quot;creating-a-user&quot;&gt;Creating a user&lt;&#x2F;h2&gt;
&lt;p&gt;As much as it&#x27;s convenient to not have to enter a password every time, we need to create a user account that isn&#x27;t root. Exposing root login on an SSH server is probably not a good idea even if you have multi factor authentication. Call me paranoid, but I think having to enter root password sometimes is the price I&#x27;m willing to pay for some sense of security. Type&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; class=&quot;language-bash z-code&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;useradd&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt;&lt;span class=&quot;z-variable z-parameter z-option z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-parameter z-shell&quot;&gt; -&lt;&#x2F;span&gt;G&lt;&#x2F;span&gt; sudo&lt;span class=&quot;z-variable z-parameter z-option z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-parameter z-shell&quot;&gt; -&lt;&#x2F;span&gt;m&lt;&#x2F;span&gt; wolfgang&lt;span class=&quot;z-variable z-parameter z-option z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-parameter z-shell&quot;&gt; -&lt;&#x2F;span&gt;s&lt;&#x2F;span&gt; &#x2F;bin&#x2F;bash&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;That&#x27;s going to create a user, set bash as default shell for him and permit sudo usage.&lt;&#x2F;p&gt;
&lt;p&gt;Afterwards we&#x27;ll need to create a password for our user, using&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; class=&quot;language-bash z-code&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;passwd&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; wolfgang&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Enter your password twice and we&#x27;re good to go.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;copying-ssh-key-from-host-to-the-server&quot;&gt;Copying SSH key from host to the server&lt;&#x2F;h2&gt;
&lt;p&gt;Now that we&#x27;ve created our user it&#x27;s a good time to copy the public SSH key to the server. Open a second terminal window for your local terminal and enter:&lt;&#x2F;p&gt;
&lt;h3 id=&quot;linux-or-mac&quot;&gt;Linux or Mac&lt;&#x2F;h3&gt;
&lt;pre data-lang=&quot;bash&quot; class=&quot;language-bash z-code&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;ssh-copy-id&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; wolfgang@ip_address&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;windows&quot;&gt;Windows&lt;&#x2F;h3&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;type $env:USERPROFILE\.ssh\id_rsa.pub | ssh ip-address &amp;quot;cat &amp;gt;&amp;gt; .ssh&#x2F;authorized_keys&amp;quot;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;You&#x27;ll be prompted to enter your password and once you do, go back to the terminal window with your server. Don&#x27;t close the other window yet.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;restricting-ssh-to-key-authentication&quot;&gt;Restricting SSH to key authentication&lt;&#x2F;h2&gt;
&lt;p&gt;Now that we&#x27;ve copied the SSH keys to the server we have to restrict authentication to the public key only. Let&#x27;s edit the sshd configuration file&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; class=&quot;language-bash z-code&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;nvim&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; &#x2F;etc&#x2F;ssh&#x2F;sshd_config&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;First of all, let&#x27;s change the default port. This won&#x27;t do much for security, but it will help with those obnoxious SSH scanners that try to log in with default credentials. Not much, but the security logs will definitely get easier to read. You can use any port that&#x27;s not taken by other services, but I prefer to use 69. Nice&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; class=&quot;language-bash z-code&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-comment z-line z-number-sign z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-begin z-shell&quot;&gt;#&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-comment z-line z-number-sign z-shell&quot;&gt; Port 22&lt;&#x2F;span&gt;&lt;span class=&quot;z-comment z-line z-number-sign z-shell&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;Port&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; 69&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Next, we need to disable password authentication so that you&#x27;re only able to log in using a public key.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; class=&quot;language-bash z-code&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;PasswordAuthentication&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; no&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Last but not least, let&#x27;s also disable root login&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; class=&quot;language-bash z-code&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;PermitRootLogin&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; no&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Now save the file and restart the sshd service using&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; class=&quot;language-bash z-code&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;systemctl&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; restart sshd&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Now without closing this window let&#x27;s go back to our local machine and try to log in with our key:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; class=&quot;language-bash z-code&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;ssh&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt;&lt;span class=&quot;z-variable z-parameter z-option z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-parameter z-shell&quot;&gt; -&lt;&#x2F;span&gt;i&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-group z-expansion z-tilde&quot;&gt;&lt;span class=&quot;z-variable z-language z-tilde z-shell&quot;&gt;~&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&#x2F;.ssh&#x2F;id_rsa wolfgang@ip_address&lt;span class=&quot;z-variable z-parameter z-option z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-parameter z-shell&quot;&gt; -&lt;&#x2F;span&gt;p&lt;&#x2F;span&gt; 69&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;If you see the prompt to enter your key password, that means we&#x27;re good to go. It&#x27;s also a good idea to verify that we can&#x27;t log in with our password anymore:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; class=&quot;language-bash z-code&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;ssh&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; wolfgang@ip_address&lt;span class=&quot;z-variable z-parameter z-option z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-parameter z-shell&quot;&gt; -&lt;&#x2F;span&gt;p&lt;&#x2F;span&gt; 69&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;This should give us &amp;quot;Permission denied&amp;quot;.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;creating-a-server-alias&quot;&gt;Creating a server alias&lt;&#x2F;h2&gt;
&lt;p&gt;But you might have noticed that this command is kind of long and annoying to type, so let&#x27;s fix that. Create a file in the &amp;quot;.ssh&amp;quot; folder in your home directory called &amp;quot;config&amp;quot; and edit it using your favourite text editor:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; class=&quot;language-bash z-code&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;nvim&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; &lt;span class=&quot;z-meta z-group z-expansion z-tilde&quot;&gt;&lt;span class=&quot;z-variable z-language z-tilde z-shell&quot;&gt;~&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&#x2F;.ssh&#x2F;config&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Here we&#x27;re going to create an alias for our VPS&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; class=&quot;language-bash z-code&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;Host&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; wolfgangsvpn &lt;span class=&quot;z-comment z-line z-number-sign z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-begin z-shell&quot;&gt;#&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-comment z-line z-number-sign z-shell&quot;&gt; choose a name for your server   &lt;&#x2F;span&gt;&lt;span class=&quot;z-comment z-line z-number-sign z-shell&quot;&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;	&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;User&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; wolgang &lt;span class=&quot;z-comment z-line z-number-sign z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-begin z-shell&quot;&gt;#&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-comment z-line z-number-sign z-shell&quot;&gt; the username of the user that we created&lt;&#x2F;span&gt;&lt;span class=&quot;z-comment z-line z-number-sign z-shell&quot;&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;  	&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;Port&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; 69&lt;&#x2F;span&gt;
  	&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;IdentityFile&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; &lt;span class=&quot;z-meta z-group z-expansion z-tilde&quot;&gt;&lt;span class=&quot;z-variable z-language z-tilde z-shell&quot;&gt;~&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&#x2F;.ssh&#x2F;id_rsa &lt;span class=&quot;z-comment z-line z-number-sign z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-begin z-shell&quot;&gt;#&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-comment z-line z-number-sign z-shell&quot;&gt; that&amp;#39;s the location of our key file&lt;&#x2F;span&gt;&lt;span class=&quot;z-comment z-line z-number-sign z-shell&quot;&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;	&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;HostName&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; ip_address &lt;span class=&quot;z-comment z-line z-number-sign z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-begin z-shell&quot;&gt;#&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-comment z-line z-number-sign z-shell&quot;&gt; that&amp;#39;s the IP address of our server&lt;&#x2F;span&gt;&lt;span class=&quot;z-comment z-line z-number-sign z-shell&quot;&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Save and close, and now we can login to our server by simply typing &lt;code&gt;ssh wolfgangsvpn&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;p&gt;If you also don&#x27;t want to see this wall of text every time you login, type in &lt;code&gt;touch .hushlogin&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;setting-up-openvpn&quot;&gt;Setting up OpenVPN&lt;&#x2F;h2&gt;
&lt;p&gt;I know that Wireguard has been the hot new VPN protocol that everyone&#x27;s been focused on lately, but in this video I&#x27;m going to use OpenVPN instead. Why? Because it has wider support when it comes to client applications and some of the applications that I&#x27;ll be talking about in the 2nd part of this tutorial utilize OpenVPN. If you&#x27;re interested in setting up a Wireguard server, there are a lot of tutorials on the Internet about it.&lt;&#x2F;p&gt;
&lt;p&gt;Normally setting up an OpenVPN server takes some time since you need to install the packages, generate the keys, set up IPTables, write the config files for the server and the client. Thankfully, we won&#x27;t do any of this in the tutorial and instead we&#x27;ll use the OpenVPN road warrior script from a github user called Nyr - https:&#x2F;&#x2F;github.com&#x2F;Nyr&#x2F;openvpn-install. This script will do all the hard work for us and all we have to do is answer a few simple questions and download the config file at the end. Needless to say you shouldn&#x27;t just go around executing random scripts you downloaded from the internet, so if you know some bash, read the script first and make sure there&#x27;s nothing fishy in there. If you don&#x27;t know any bash, maybe send it to a friend who does. When you done with the perusal of the script, click raw and copy the link from your browser.&lt;&#x2F;p&gt;
&lt;p&gt;Log in to your server and install &lt;code&gt;wget&lt;&#x2F;code&gt; if you haven&#x27;t already. Sometimes it comes with your OS image already, but sometimes it doesn&#x27;t.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; class=&quot;language-bash z-code&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;sudo&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; apt install wget&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Next, type &lt;code&gt;wget&lt;&#x2F;code&gt;, press Space and paste the link that you copied earlier. Press Enter&lt;&#x2F;p&gt;
&lt;p&gt;Now let&#x27;s launch the script&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; class=&quot;language-bash z-code&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;sudo&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; bash openvpn-install.sh&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;The script will ask you some questions, and in most cases you&#x27;ll want to pick the default answer. For the port, you can either choose the default port, 1194, but I prefer to choose 443, since 1194 is known as &amp;quot;the OpenVPN port&amp;quot; and in some cases it can be blocked on your network. 443 is the same port that is used for HTTPS, but whereas HTTPS uses TCP, OpenVPN (in this configuration) uses UDP, so they won&#x27;t conflict with each other.&lt;&#x2F;p&gt;
&lt;p&gt;You&#x27;re also going to be asked which DNS you want to use. Feel free to choose whatever you like, but I normally choose 1.1.1.1&lt;&#x2F;p&gt;
&lt;p&gt;As for the client name, choose whatever you like.&lt;&#x2F;p&gt;
&lt;p&gt;Now that the configuration is done, press any key and the installation process is going to start. It&#x27;s fully automated and at the end you&#x27;ll going to get a configuration file that we&#x27;ll download to our local machine later on. The problem is that the script places the file in the root directory by default, and in order to download it later, we need to move it to our user&#x27;s home directory and give ourselves the correct priviliges:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; class=&quot;language-bash z-code&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;sudo&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; mv &#x2F;root&#x2F;thinkpad.ovpn &lt;span class=&quot;z-meta z-group z-expansion z-tilde&quot;&gt;&lt;span class=&quot;z-variable z-language z-tilde z-shell&quot;&gt;~&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;sudo&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; chown wolfgang thinkpad.ovpn&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;With this out of the way there&#x27;s only one thing left to be done on the server&#x27;s side, and that&#x27;s to disable the logs. Let&#x27;s edit the config file:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; class=&quot;language-bash z-code&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;sudo&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; nvim &#x2F;etc&#x2F;openvpn&#x2F;server&#x2F;server.conf&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;And change &lt;code&gt;verb 3&lt;&#x2F;code&gt; to &lt;code&gt;verb 0&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Now restart the OpenVPN service:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; class=&quot;language-bash z-code&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;systemctl&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; restart openvpn-server@server.service&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;And there we go! A VPN that &lt;strong&gt;actually&lt;&#x2F;strong&gt; doesn&#x27;t keep logs. Amazing.&lt;&#x2F;p&gt;
&lt;p&gt;I also just noticed that the hostname of the server is &amp;quot;localhost&amp;quot;, which is not cool for many reasons. So let&#x27;s change it to something else, I&#x27;m going to call it &amp;quot;wolfgangsvpn&amp;quot;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;downloading-the-config-file&quot;&gt;Downloading the config file&lt;&#x2F;h2&gt;
&lt;p&gt;Now all we need to do is to download the configuration file to our local machine so that we can actually use the VPN. Open a terminal on your local machine and type in &lt;code&gt;sftp servername&lt;&#x2F;code&gt; Next, download the file using the command &lt;code&gt;get configname.ovpn&lt;&#x2F;code&gt;. And finally type &lt;code&gt;exit&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Now if you want to use this VPN for all your traffic, which I don&#x27;t recommend, you can download &lt;a href=&quot;https:&#x2F;&#x2F;tunnelblick.net&#x2F;&quot;&gt;Tunnelblick&lt;&#x2F;a&gt; on Mac, &lt;a href=&quot;https:&#x2F;&#x2F;openvpn.net&#x2F;client-connect-vpn-for-windows&#x2F;&quot;&gt;OpenVPN Connect&lt;&#x2F;a&gt; on Windows or load it into the NetworkManager on Linux. &lt;&#x2F;p&gt;
&lt;h2 id=&quot;nice-to-have&quot;&gt;Nice to have&lt;&#x2F;h2&gt;
&lt;p&gt;At this point we have a barebones VPN server up and running. You can stop here and use it like you would normally use a VPN (in which case thanks for reading and i&#x27;m glad I could help), but if you want to know how to make it even more secure and add some features that are nice to have, like unattended upgrades, keep reading.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;optional-installing-mosh&quot;&gt;Optional: Installing mosh&lt;&#x2F;h2&gt;
&lt;p&gt;Now, ssh is nice but it does get annoying sometimes, especially when you change your network and your connection drops immediately. Instead, I prefer to use mosh. There&#x27;s no complicated config file shenenigans, you just install mosh on both your local and your remote machine, and after that you can simply use the &lt;code&gt;mosh&lt;&#x2F;code&gt; command as a drop-in replacement for &lt;code&gt;ssh&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;optional-setting-up-multi-factor-authentication&quot;&gt;Optional: Setting up multi-factor authentication&lt;&#x2F;h2&gt;
&lt;p&gt;Now, public key authentication is probably secure enough for most, but if you want to be extra fancy, you can also add MFA or multi-factor authentication. The way it works is you install an app on your phone (there are a lot of open source apps on Android like AndOTP) and every time you log in you get a one time password in the app which you need to enter in order to log in. This provides an additional layer of security for your server which can be useful for some of us who are especially paranoid.&lt;&#x2F;p&gt;
&lt;p&gt;The first thing you have to do is to install &lt;code&gt;google-authenticator-libpam&lt;&#x2F;code&gt; Yes, the protocol is made by Google, but it&#x27;s completely open-source and you don&#x27;t have to use the Google Authenticator app on your phone, there are many open source options as I&#x27;ve already mentioned&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; class=&quot;language-bash z-code&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;sudo&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; apt install libpam-google-authenticator&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;After that, launch the initialization script by typing &lt;code&gt;google-authenticator&lt;&#x2F;code&gt; . There, basically answer yes to all questions except for the one about multiple users and the one about 30 second tokens.&lt;&#x2F;p&gt;
&lt;p&gt;Once you&#x27;ve done that, you might have noticed a big QR code in your command line as well as the recovery codes. Make sure to write those codes down somewhere save, they&#x27;ll be useful in case you lose the access to the app on your phone. After that what you need to do is launch the authenticator app on your phone, I&#x27;ll use OTP Auth, add a new account and chooe &amp;quot;Scan a QR code&amp;quot;. After you scan the code, the account will be added to the app. And we&#x27;re done with the phone part for now.&lt;&#x2F;p&gt;
&lt;p&gt;Let&#x27;s go back to the server terminal and edit the authentication settings file for sshd:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; class=&quot;language-bash z-code&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;sudo&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; nvim &#x2F;etc&#x2F;pam.d&#x2F;sshd&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Here we&#x27;ll comment out the line that says &lt;code&gt;@include common-auth&lt;&#x2F;code&gt;. Normally the two factor authentication will ask you for your user password and the one time password, but since we&#x27;re already using a public key with the password, having to enter your password twice is slightly annoying. That way you&#x27;ll only have to enter the public key password and the one time password.&lt;&#x2F;p&gt;
&lt;p&gt;Next we need to add this line to the end of the file:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; class=&quot;language-bash z-code&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;auth&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; required pam_google_authenticator.so&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Let&#x27;s save the file and quit. Now we need to edit the SSHD configuration file to make SSH aware of the new authentication method:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; class=&quot;language-bash z-code&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;sudo&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; nvim &#x2F;etc&#x2F;ssh&#x2F;sshd_config&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Here we need to change the following lines:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; class=&quot;language-bash z-code&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;ChallengeResponseAuthentication&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; yes&lt;&#x2F;span&gt;
&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;UsePAM&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; yes&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;And add a new line after UsePAM that says:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; class=&quot;language-bash z-code&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;AuthenticationMethods&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; publickey,password publickey,keyboard-interactive&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;That&#x27;s it, let&#x27;s save the file and exit. And now let&#x27;s restart the SSH service for the changes to take effect:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; class=&quot;language-bash z-code&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;sudo&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; systemctl restart sshd&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;As I mentioned in the beginning, it&#x27;s always a good idea to try and log in in a separate terminal window without closing the server session. Otherwise if you messed up you&#x27;ll be locked out of the SSH and obviously you don&#x27;t want that.&lt;&#x2F;p&gt;
&lt;p&gt;If you try to log in now you&#x27;ll see that apart from the usual public key password you&#x27;re also going to be asked for the one time password from your app. Once again, if you&#x27;re using Gnome, you won&#x27;t be prompted for the public key until you log out and log back in again, only the one time password from your phone app. Let&#x27;s enter the password and voila! Now our server is secured by two-factor authentication.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;optional-unattended-upgrades&quot;&gt;Optional: Unattended upgrades&lt;&#x2F;h2&gt;
&lt;p&gt;One last thing that I want to show you today is unattended software upgrades. What this means is we&#x27;re going to have a script that runs &lt;code&gt;apt update&lt;&#x2F;code&gt; and &lt;code&gt;apt upgrade&lt;&#x2F;code&gt; regularly, thus liberating us from the burden of having to log in to the server and do this manually. The server will also be rebooted for kernel updates, but since the reboot takes less than a minute, and since kernel updates are not very frequent, your VPN won&#x27;t actually have much downtime because of the upgrades. You can also disable the automatic reboots if you prefer to do it yourself.&lt;&#x2F;p&gt;
&lt;p&gt;So the first thing we need to do is to install the unattended-upgrades package:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; class=&quot;language-bash z-code&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;sudo&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; apt install unattended-upgrades apt-listchanges bsd-mailx&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Next, enable the stable security updates:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; class=&quot;language-bash z-code&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;sudo&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; dpkg-reconfigure&lt;span class=&quot;z-variable z-parameter z-option z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-parameter z-shell&quot;&gt; -&lt;&#x2F;span&gt;plow&lt;&#x2F;span&gt; unattended-upgrades&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;After that&#x27;s done, let&#x27;s edit the config file&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; class=&quot;language-bash z-code&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;sudo&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; nvim &#x2F;etc&#x2F;apt&#x2F;apt.conf.d&#x2F;50unattended-upgrades&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Here we need to set our email address which is going to be used for update notifications:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; class=&quot;language-bash z-code&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;Unattended-Upgrade::Mail&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; &lt;span class=&quot;z-string z-quoted z-double z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-shell&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;mail@example.com&lt;span class=&quot;z-punctuation z-definition z-string z-end z-shell&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-keyword z-operator z-logical z-continue z-shell&quot;&gt;;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;And then also enable automatic reboots, set up cleanup tasks for removing unused kernels and set the automatic reboot time at 5AM.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; class=&quot;language-bash z-code&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;Unattended-Upgrade::Automatic-Reboot&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; &lt;span class=&quot;z-string z-quoted z-double z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-shell&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;true&lt;span class=&quot;z-punctuation z-definition z-string z-end z-shell&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-keyword z-operator z-logical z-continue z-shell&quot;&gt;;&lt;&#x2F;span&gt;  &lt;span class=&quot;z-comment z-line z-number-sign z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-begin z-shell&quot;&gt;#&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-comment z-line z-number-sign z-shell&quot;&gt; this is kind of obvious&lt;&#x2F;span&gt;&lt;span class=&quot;z-comment z-line z-number-sign z-shell&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;Unattended-Upgrade::Remove-Unused-Kernel-Packages&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; &lt;span class=&quot;z-string z-quoted z-double z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-shell&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;true&lt;span class=&quot;z-punctuation z-definition z-string z-end z-shell&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-keyword z-operator z-logical z-continue z-shell&quot;&gt;;&lt;&#x2F;span&gt;
&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;Unattended-Upgrade::Remove-Unused-Dependencies&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; &lt;span class=&quot;z-string z-quoted z-double z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-shell&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;true&lt;span class=&quot;z-punctuation z-definition z-string z-end z-shell&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-keyword z-operator z-logical z-continue z-shell&quot;&gt;;&lt;&#x2F;span&gt;
&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;Unattended-Upgrade::Automatic-Reboot&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; &lt;span class=&quot;z-string z-quoted z-double z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-shell&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;true&lt;span class=&quot;z-punctuation z-definition z-string z-end z-shell&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-keyword z-operator z-logical z-continue z-shell&quot;&gt;;&lt;&#x2F;span&gt;
&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;Unattended-Upgrade::Automatic-Reboot-Time&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; &lt;span class=&quot;z-string z-quoted z-double z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-shell&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;05:00&lt;span class=&quot;z-punctuation z-definition z-string z-end z-shell&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-keyword z-operator z-logical z-continue z-shell&quot;&gt;;&lt;&#x2F;span&gt; &lt;span class=&quot;z-comment z-line z-number-sign z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-begin z-shell&quot;&gt;#&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-comment z-line z-number-sign z-shell&quot;&gt; here we&amp;#39;ll specify when we want our system to reboot&lt;&#x2F;span&gt;&lt;span class=&quot;z-comment z-line z-number-sign z-shell&quot;&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;That&#x27;s it! Let&#x27;s see if it works&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; class=&quot;language-bash z-code&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;sudo&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; unattended-upgrades&lt;span class=&quot;z-variable z-parameter z-option z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-parameter z-shell&quot;&gt; --&lt;&#x2F;span&gt;dry-run&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;So now your system and all the packages will be updated automatically and you&#x27;ll get an email every time an upgrade has been performed.&lt;&#x2F;p&gt;
</description>
      </item>
      <item>
          <title>Putting an Airport card into Thinkpad T440p</title>
          <pubDate>Tue, 11 Jun 2019 00:00:00 +0000</pubDate>
          <author>Unknown</author>
          <link>https://notthebe.ee/blog/installing-an-airport-card-into-t440p/</link>
          <guid>https://notthebe.ee/blog/installing-an-airport-card-into-t440p/</guid>
          <description>&lt;div class=&quot;post__image&quot;&gt;
    &lt;a href=&quot;https:&#x2F;&#x2F;notthebe.ee&#x2F;blog&#x2F;installing-an-airport-card-into-t440p&#x2F;Card.jpg&quot; class=&quot;image-link&quot; target=&quot;_blank&quot;&gt;
        &lt;img src=&quot;https:&#x2F;&#x2F;notthebe.ee&#x2F;blog&#x2F;installing-an-airport-card-into-t440p&#x2F;Card.jpg&quot; alt=&quot;Airport Card in a T440p&quot;&gt;
    &lt;&#x2F;a&gt;
&lt;&#x2F;div&gt;
&lt;p&gt;As you probably know, there are two cards that are officially physically compatible with T440p and work on macOS (almost) out of the box: &lt;strong&gt;DW1830&lt;&#x2F;strong&gt; and &lt;strong&gt;DW1560&lt;&#x2F;strong&gt;. Both of these cards are pretty expensive (90-120€ and 50-70€ respectively) and difficult to source (sellers are often out of stock due to the high demand).&lt;&#x2F;p&gt;
&lt;p&gt;So I started looking for alternative solutions and eventually decided to buy an &lt;a href=&quot;https:&#x2F;&#x2F;www.ebay.de&#x2F;itm&#x2F;BCM94360CS2-BCM943224PCIEBT2-12-6-Pin-WIFI-wireless-card-module-to-NGFF-Gut-CC&#x2F;233302599936&quot;&gt;NGFF to Airport adapter&lt;&#x2F;a&gt; and a &lt;a href=&quot;https:&#x2F;&#x2F;www.ebay.de&#x2F;itm&#x2F;MacBook-Air-2010-2011-2012-BCM943224PCIEBT2-AirPort-WLan-BlueTooth-Board&#x2F;173902975009?ssPageName=STRK%3AMEBIDX%3AIT&amp;amp;_trksid=p2057872.m2749.l2649&quot;&gt;BCM943224PCIEBT2&lt;&#x2F;a&gt; Airport card from a Macbook Air (18€ in total), and try my luck.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;some-considerations&quot;&gt;Some considerations&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;Please bear in mind that this is a higly experimental method. The results might be different for you, and this is &lt;strong&gt;by no means&lt;&#x2F;strong&gt; a 100% final working method. There&#x27;s no guarantee, so do it at your own risk&lt;&#x2F;li&gt;
&lt;li&gt;Make sure you know what you&#x27;re doing, since the guide involves taking the laptop apart and this process is not for the faint of heart.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;preparations&quot;&gt;Preparations&lt;&#x2F;h3&gt;
&lt;p&gt;Remove &lt;a href=&quot;https:&#x2F;&#x2F;notthebe.ee&#x2F;blog&#x2F;removing-the-wifi-whitelist&#x2F;&quot;&gt;Wi-Fi whitelist&lt;&#x2F;a&gt; in your BIOS if you haven&#x27;t done that yet.&lt;&#x2F;p&gt;
&lt;p&gt;Modify the NGFF adapter, since it won&#x27;t fit into the T440p. Use diagonal pliers (cutters) to cut off a part of the adapter (be careful not to touch &lt;strong&gt;contacts&lt;&#x2F;strong&gt; on the left side – slightly left to a &amp;quot;pb&amp;quot; label on the picture):&lt;br &#x2F;&gt;
&lt;div class=&quot;post__image&quot;&gt;
    &lt;a href=&quot;https:&#x2F;&#x2F;notthebe.ee&#x2F;blog&#x2F;installing-an-airport-card-into-t440p&#x2F;adapter.png&quot; class=&quot;image-link&quot; target=&quot;_blank&quot;&gt;
        &lt;img src=&quot;https:&#x2F;&#x2F;notthebe.ee&#x2F;blog&#x2F;installing-an-airport-card-into-t440p&#x2F;adapter.png&quot; alt=&quot;Cutting the adapter&quot;&gt;
    &lt;&#x2F;a&gt;
&lt;&#x2F;div&gt;
&lt;&#x2F;p&gt;
&lt;h3 id=&quot;disassembly&quot;&gt;Disassembly&lt;&#x2F;h3&gt;
&lt;p&gt;Dissassemble the laptop – you will need to remove:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;External battery&lt;&#x2F;li&gt;
&lt;li&gt;Big door&lt;&#x2F;li&gt;
&lt;li&gt;CMOS battery&lt;&#x2F;li&gt;
&lt;li&gt;Webcam cable&lt;&#x2F;li&gt;
&lt;li&gt;Fan cable&lt;&#x2F;li&gt;
&lt;li&gt;DVD drive&lt;&#x2F;li&gt;
&lt;li&gt;Keyboard and keyboard bezel&lt;&#x2F;li&gt;
&lt;li&gt;Base cover assembly&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Refer to &lt;a href=&quot;https:&#x2F;&#x2F;thinkpads.com&#x2F;support&#x2F;hmm&#x2F;hmm_pdf&#x2F;t440p_hmm_en_sp40a25467_01.pdf&quot;&gt;Lenovo Maintenance Manual&lt;&#x2F;a&gt; for instructions. There are a few plastics snaps around the docking station connector that are pretty tight, apply a little bit of force when you take off the base cover assembly and it should come right off.&lt;&#x2F;p&gt;
&lt;p&gt;After you removed the base cover assembly, disconnect the &lt;em&gt;Ethernet controller&lt;&#x2F;em&gt; here:&lt;br &#x2F;&gt;
&lt;div class=&quot;post__image&quot;&gt;
    &lt;a href=&quot;https:&#x2F;&#x2F;notthebe.ee&#x2F;blog&#x2F;installing-an-airport-card-into-t440p&#x2F;Ethernet.png&quot; class=&quot;image-link&quot; target=&quot;_blank&quot;&gt;
        &lt;img src=&quot;https:&#x2F;&#x2F;notthebe.ee&#x2F;blog&#x2F;installing-an-airport-card-into-t440p&#x2F;Ethernet.png&quot; alt=&quot;Ethernet controller location&quot;&gt;
    &lt;&#x2F;a&gt;
&lt;&#x2F;div&gt;
&lt;&#x2F;p&gt;
&lt;p&gt;Screw the adapter to the motherboard and insert the Airport card into the adapter. Then, lift the Airport card from the adapter and try to &amp;quot;sandwich&amp;quot; the rear part of the Ethernet controller between the adapter and the card, as shown here (sorry for the madskillz):&lt;br &#x2F;&gt;
&lt;div class=&quot;post__image&quot;&gt;
    &lt;a href=&quot;https:&#x2F;&#x2F;notthebe.ee&#x2F;blog&#x2F;installing-an-airport-card-into-t440p&#x2F;scheme.jpg&quot; class=&quot;image-link&quot; target=&quot;_blank&quot;&gt;
        &lt;img src=&quot;https:&#x2F;&#x2F;notthebe.ee&#x2F;blog&#x2F;installing-an-airport-card-into-t440p&#x2F;scheme.jpg&quot; alt=&quot;Scheme&quot;&gt;
    &lt;&#x2F;a&gt;
&lt;&#x2F;div&gt;
&lt;&#x2F;p&gt;
&lt;p&gt;Finally, connect the Ethernet card to the motherboard, screw it in and assemble the laptop. Don&#x27;t put the big door yet: there is a plastic hook on it that connects with the space between the Ethernet connector and the base cover assembly, which is now occupied by the Airport card. Use cutters to remove it.&lt;br &#x2F;&gt;
&lt;div class=&quot;post__image&quot;&gt;
    &lt;a href=&quot;https:&#x2F;&#x2F;notthebe.ee&#x2F;blog&#x2F;installing-an-airport-card-into-t440p&#x2F;hook.png&quot; class=&quot;image-link&quot; target=&quot;_blank&quot;&gt;
        &lt;img src=&quot;https:&#x2F;&#x2F;notthebe.ee&#x2F;blog&#x2F;installing-an-airport-card-into-t440p&#x2F;hook.png&quot; alt=&quot;Big door hook&quot;&gt;
    &lt;&#x2F;a&gt;
&lt;&#x2F;div&gt;
&lt;&#x2F;p&gt;
&lt;p&gt;Turn the laptop on. It will display a message about CMOS battery and wrong checksum  – go to the BIOS settings and &lt;strong&gt;restore default settings&lt;&#x2F;strong&gt;. My laptop refused to boot until I did that, but YMMV.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Voilá!&lt;&#x2F;strong&gt; The card works out of the box with no additional configuration required!&lt;br &#x2F;&gt;
&lt;div class=&quot;post__image&quot;&gt;
    &lt;a href=&quot;https:&#x2F;&#x2F;notthebe.ee&#x2F;blog&#x2F;installing-an-airport-card-into-t440p&#x2F;screen.png&quot; class=&quot;image-link&quot; target=&quot;_blank&quot;&gt;
        &lt;img src=&quot;https:&#x2F;&#x2F;notthebe.ee&#x2F;blog&#x2F;installing-an-airport-card-into-t440p&#x2F;screen.png&quot; alt=&quot;System Report screenshot&quot;&gt;
    &lt;&#x2F;a&gt;
&lt;&#x2F;div&gt;
&lt;&#x2F;p&gt;
</description>
      </item>
      <item>
          <title>How to add your custom bootsplash to SeaBIOS</title>
          <pubDate>Thu, 27 Sep 2018 00:00:00 +0000</pubDate>
          <author>Unknown</author>
          <link>https://notthebe.ee/blog/custom-seabios-bootsplash/</link>
          <guid>https://notthebe.ee/blog/custom-seabios-bootsplash/</guid>
          <description>&lt;div class=&quot;post__image&quot;&gt;
    &lt;a href=&quot;https:&#x2F;&#x2F;notthebe.ee&#x2F;blog&#x2F;custom-seabios-bootsplash&#x2F;photo.jpg&quot; class=&quot;image-link&quot; target=&quot;_blank&quot;&gt;
        &lt;img src=&quot;https:&#x2F;&#x2F;notthebe.ee&#x2F;blog&#x2F;custom-seabios-bootsplash&#x2F;photo.jpg&quot; alt=&quot;Bootsplash&quot;&gt;
    &lt;&#x2F;a&gt;
&lt;&#x2F;div&gt;
&lt;p&gt;&lt;strong&gt;WARNING!&lt;&#x2F;strong&gt; Proceed at your own risk! Be sure to have a Raspberry Pi and a Pomona clip handy in case you mess up.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;saving-the-image&quot;&gt;Saving the image&lt;&#x2F;h2&gt;
&lt;p&gt;Open the desired image and export it as JPG, in the saving options change &amp;quot;Subsampling&amp;quot; to 4:2:0 and uncheck &amp;quot;Progressive&amp;quot;:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;div class=&quot;post__image&quot;&gt;
    &lt;a href=&quot;https:&#x2F;&#x2F;notthebe.ee&#x2F;blog&#x2F;custom-seabios-bootsplash&#x2F;screenshot.png&quot; class=&quot;image-link&quot; target=&quot;_blank&quot;&gt;
        &lt;img src=&quot;https:&#x2F;&#x2F;notthebe.ee&#x2F;blog&#x2F;custom-seabios-bootsplash&#x2F;screenshot.png&quot; alt=&quot;GIMP Settings&quot;&gt;
    &lt;&#x2F;a&gt;
&lt;&#x2F;div&gt;

&lt;sub&gt;&lt;a href=&quot;https:&#x2F;&#x2F;puri.sm&#x2F;posts&#x2F;librem-13-coreboot-report-february-25th-2017&#x2F;&quot;&gt;Source&lt;&#x2F;a&gt;&lt;&#x2F;sub&gt;&lt;&#x2F;p&gt;
&lt;p&gt;The output image must be 1024px wide and 768px tall. Don&#x27;t forget that the X230&#x27;s screen is 16:9, so the it will be additionally shrinked.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;making-a-dump-of-up-your-current-rom&quot;&gt;Making a dump of up your current ROM&lt;&#x2F;h2&gt;
&lt;p&gt;Dump your current ROM using &lt;strong&gt;flashrom&lt;&#x2F;strong&gt; (don&#x27;t forget to boot with &lt;code&gt;iomem=relaxed&lt;&#x2F;code&gt; kernel option):&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;# flashrom -p internal -r file.rom
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Additionally, if you&#x27;re on X220, you might have to force flashrom (as mentioned &lt;a href=&quot;https:&#x2F;&#x2F;www.coreboot.org&#x2F;Board:lenovo&#x2F;x220&quot;&gt;here&lt;&#x2F;a&gt;):&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;# flashrom -p internal:laptop=force_I_want_a_brick -r file.rom
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h2 id=&quot;adding-the-bootsplash&quot;&gt;Adding the bootsplash&lt;&#x2F;h2&gt;
&lt;p&gt;Then, add the bootsplash image using &lt;code&gt;cbfstool&lt;&#x2F;code&gt; from &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;coreboot&#x2F;coreboot&quot;&gt;coreboot-utils&lt;&#x2F;a&gt;:&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;# cbfstool file.rom add -f &amp;lt;name of your bootsplash file&amp;gt; -n bootsplash.jpg -t raw
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;For X230 users:&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;$ cat &amp;gt;layout.txt &amp;lt;&amp;lt;EOL
0x00000000:0x007fffff ifdmegbe
0x00800000:0x00bfffff bios
EOL
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h2 id=&quot;flashing-the-rom&quot;&gt;Flashing the ROM&lt;&#x2F;h2&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;X230:
# flashrom -p internal --layout layout.txt --image bios -w file.rom

X220:
# flashrom -p internal:laptop=force_I_want_a_brick --image bios -w file.rom
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Have fun with your new bootsplash!&lt;&#x2F;p&gt;
</description>
      </item>
      <item>
          <title>Reverting Coreboot installation on Thinkpad X220 without an original SPI dump</title>
          <pubDate>Tue, 11 Sep 2018 00:00:00 +0000</pubDate>
          <author>Unknown</author>
          <link>https://notthebe.ee/blog/revert-coreboot/</link>
          <guid>https://notthebe.ee/blog/revert-coreboot/</guid>
          <description>&lt;p&gt;Congratulations! You forgot to back up your original BIOS dump, and now you&#x27;re stuck with coreboot forever...right? Not so fast.&lt;&#x2F;p&gt;
&lt;p&gt;Even without the SPI dump, you can still go back to the original BIOS, which is really useful if you experience some problems or decide to install macOS.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;requirements&quot;&gt;Requirements&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;$01CB000.FL1&lt;&#x2F;code&gt; file from this repository&lt;&#x2F;li&gt;
&lt;li&gt;X220 running Linux with &lt;code&gt;flashrom&lt;&#x2F;code&gt; package installed, as well as kernel option &lt;code&gt;iomem=relaxed&lt;&#x2F;code&gt; set in bootloader&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;warning&quot;&gt;WARNING&lt;&#x2F;h2&gt;
&lt;p&gt;Only do this if you know what you&#x27;re doing, be sure to have a Raspberry Pi and a Pomona clip handy to re-flash your SPI chip in case you mess up. I am not responsible for any damage your computer may suffer during this process.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;the-process&quot;&gt;The process&lt;&#x2F;h2&gt;
&lt;p&gt;Download &lt;a href=&quot;https:&#x2F;&#x2F;notthebe.ee&#x2F;blog&#x2F;revert-coreboot&#x2F;$01CB000.FL1&quot;&gt;this file&lt;&#x2F;a&gt;, and truncate it to exactly 8MByte:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; class=&quot;language-bash z-code&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;dd&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; if=&lt;span class=&quot;z-constant z-character z-escape z-shell&quot;&gt;\$&lt;&#x2F;span&gt;01CB000.FL1 of=x220_spi.bin bs=&lt;span class=&quot;z-meta z-group z-expansion z-arithmetic z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-shell&quot;&gt;$&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-parens z-begin z-shell&quot;&gt;((&lt;&#x2F;span&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-hexadecimal z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-numeric z-base z-shell&quot;&gt;0x&lt;&#x2F;span&gt;800000&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-parens z-end z-shell&quot;&gt;))&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; count=1&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Backup the old content &lt;strong&gt;and put it on an external storage&lt;&#x2F;strong&gt;:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; class=&quot;language-bash z-code&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;flashrom&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt;&lt;span class=&quot;z-variable z-parameter z-option z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-parameter z-shell&quot;&gt; -&lt;&#x2F;span&gt;p&lt;&#x2F;span&gt; internal:laptop=force_I_want_a_brick&lt;span class=&quot;z-variable z-parameter z-option z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-parameter z-shell&quot;&gt; -&lt;&#x2F;span&gt;r&lt;&#x2F;span&gt; file.rom&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;You may need to tell the tool which flash IC it is with the &amp;quot;-c&amp;quot; option:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; class=&quot;language-bash z-code&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;flashrom&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt;&lt;span class=&quot;z-variable z-parameter z-option z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-parameter z-shell&quot;&gt; -&lt;&#x2F;span&gt;p&lt;&#x2F;span&gt; internal:laptop=force_I_want_a_brick&lt;span class=&quot;z-variable z-parameter z-option z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-parameter z-shell&quot;&gt; -&lt;&#x2F;span&gt;c&lt;&#x2F;span&gt; MX25L6405&lt;span class=&quot;z-variable z-parameter z-option z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-parameter z-shell&quot;&gt; -&lt;&#x2F;span&gt;r&lt;&#x2F;span&gt; file.rom&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;As we want to write only the BIOS part in the SPI flash starting at offset 0x500000, we need a layout file:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; class=&quot;language-bash z-code&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-support z-function z-echo z-shell&quot;&gt;echo&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; &lt;span class=&quot;z-variable z-parameter z-option z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-parameter z-shell&quot;&gt;-&lt;&#x2F;span&gt;e&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-quoted z-double z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-shell&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;000000:4fffff dummy\n500000:7fffff bios&lt;span class=&quot;z-punctuation z-definition z-string z-end z-shell&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-assignment z-redirection z-shell&quot;&gt;&amp;gt;&lt;&#x2F;span&gt; x220.layout&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Update the BIOS portion in the SPI flash&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; class=&quot;language-bash z-code&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;flashrom&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt;&lt;span class=&quot;z-variable z-parameter z-option z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-parameter z-shell&quot;&gt; -&lt;&#x2F;span&gt;p&lt;&#x2F;span&gt; internal:laptop=force_I_want_a_brick&lt;span class=&quot;z-variable z-parameter z-option z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-parameter z-shell&quot;&gt; -&lt;&#x2F;span&gt;c&lt;&#x2F;span&gt; MX25L6405&lt;span class=&quot;z-variable z-parameter z-option z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-parameter z-shell&quot;&gt; --&lt;&#x2F;span&gt;layout&lt;&#x2F;span&gt; x220.layout&lt;span class=&quot;z-variable z-parameter z-option z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-parameter z-shell&quot;&gt; -&lt;&#x2F;span&gt;i&lt;&#x2F;span&gt; bios&lt;span class=&quot;z-variable z-parameter z-option z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-parameter z-shell&quot;&gt; -&lt;&#x2F;span&gt;w&lt;&#x2F;span&gt; x220_spi.bin&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Done!&lt;&#x2F;p&gt;
&lt;p&gt;This guide is mostly based on &lt;a href=&quot;http:&#x2F;&#x2F;thinkwiki.de&#x2F;UEFI_BIOS_T420_BIOS_Structure&quot;&gt;this wiki page&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
</description>
      </item>
    </channel>
</rss>